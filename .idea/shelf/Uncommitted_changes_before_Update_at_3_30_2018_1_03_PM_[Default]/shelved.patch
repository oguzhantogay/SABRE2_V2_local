Index: V2_dev/SABRE2LBCODE.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\nimport h5_file\nfrom PyQt4.QtGui import *\nfrom scipy.interpolate import interp1d\n\n\nclass SABRE2LBCODE(QMainWindow):\n    \"\"\" put the doc in here\"\"\"\n\n    def __init__(self, ui_layout, parent=None):\n        super(SABRE2LBCODE, self).__init__(parent)\n        self.ui = ui_layout\n\n    def LBCode(self):\n        BNodevalue = h5_file.h5_Class.read_array(self, 'BNodevalue')\n        SNodevalue = h5_file.h5_Class.read_array(self, 'SNodevalue')\n        import OpenGLcode\n        joint_nodes_length, JNodevalue = OpenGLcode.glWidget.JointTableValues(self)\n        member_count, member_values, JNodeValues_i, JNodeValues_j, _, Rval = OpenGLcode.glWidget.memberTableValues(self)\n\n        # print('BNodevalue = ', BNodevalue)\n        # print('SNodevalue = ', SNodevalue)\n        # print('joint_nodes_length = ', joint_nodes_length)\n        # print('JNodevalue = ', JNodevalue)\n        # print('member_count = ', member_count)\n        # print('member_values = ', member_values)\n        # print('JNodeValues_i = ', JNodeValues_i)\n        # print('JNodeValues_j = ', JNodeValues_j)\n        # print('Rval = ', Rval)\n\n        # The following code is to determine whether Material Assignment done or not ? Not Required for Table type.\n        # error = 0\n        # xn = int(np.sum(np.sum(SNodevalue[:,:,2])))      # Total Number of Elements\n        # mem = member_count                          # Total Nuber of Members\n        # smem = np.amax(SNodevalue[:,0,0])\n        #\n        # snu = np.zeros((mem, 1))\n        # bnu = np.zeros((mem, 1))\n        #\n        # for i in range(mem):\n        #     if smem < mem:\n        #         error += 1\n        #     else:\n        #         snu[i][0] = np.amax(SNodevalue[i,:,1])\n        #         bnu[i][0] = np.amax(BNodevalue[i,:,1]) + 1\n\n        max_b = 0\n\n        for i in range(int(BNodevalue.shape[0])):\n            max_c = np.amax(BNodevalue[i, :, 1])\n            if max_b < max_c:\n                max_b = max_c\n\n        xn = np.sum(np.sum(SNodevalue[:, :, 2]))  # Total Number of Elements\n        mem = member_count  # Total Nuber of Members\n        smem = np.amax(SNodevalue[:, 0, 0])\n        Sassemble = np.zeros((mem, int(max_b) + 2, 14))\n        # print('max b + 1 = ' ,max_b+1)\n        for k in range(14):\n            for i in range(mem):\n                Sassemble[i][0][k] = JNodeValues_i[i][k]\n\n                if not np.isclose(np.amax(BNodevalue[i, :, 1]), 0):\n                    for j in range(int(np.amax(BNodevalue[i, :, 1]))):\n                        Sassemble[i, j + 1, k] = BNodevalue[i, j, k]\n                # print('test =', int(np.amax(BNodevalue[i,:,1])))\n                Sassemble[i][int(np.amax(BNodevalue[i, :, 1])) + 1][k] = JNodeValues_j[i][k]\n\n        # print('Sassemble in LBCode =', Sassemble)\n\n        # NJbode sizing\n        q = 1\n        a = 1\n        for i in range(mem - 1):\n            q += np.amax(SNodevalue[i, :, 1]) + 1\n\n        for i in range(mem):\n            a = (int(np.amax(SNodevalue[i, :, 1])))\n\n        size_1 = q + a\n        # print('size_1 = ', size_1)\n        # print('Sassemble = ', Sassemble)\n\n        NJbode = np.zeros((int(size_1), 15))\n        # print('NJbode first = ', NJbode)\n\n        q = 1\n        r = 1\n        for i in range(mem):\n            # print('NJbode loop = ', q)\n            NJbode[q - 1][0] = r\n            NJbode[q - 1][1] = Sassemble[i][0][0]\n            NJbode[q - 1][2] = Sassemble[i][0][2]\n            NJbode[q - 1][3] = Sassemble[i][0][3]\n            NJbode[q - 1][4] = Sassemble[i][0][4]\n            NJbode[q - 1][5] = Sassemble[i][0][5]\n            NJbode[q - 1][6] = Sassemble[i][0][6]\n            NJbode[q - 1][7] = Sassemble[i][0][7]\n            NJbode[q - 1][8] = Sassemble[i][0][8]\n            NJbode[q - 1][9] = Sassemble[i][0][9]\n            NJbode[q - 1][10] = Sassemble[i][0][10]\n            NJbode[q - 1][11] = Sassemble[i][0][11]\n            NJbode[q - 1][12] = Sassemble[i][0][12]\n            NJbode[q - 1][13] = Sassemble[i][0][13]\n            NJbode[q - 1][14] = q\n\n            for j in range(int(np.amax(SNodevalue[i, :, 1]))):\n                NJbode[q + j][0] = NJbode[q + j - 1][0] + SNodevalue[i][j][2]\n                NJbode[q + j][1] = Sassemble[i][j + 1][0]\n                NJbode[q + j][2] = Sassemble[i][j + 1][2]\n                NJbode[q + j][3] = Sassemble[i][j + 1][3]\n                NJbode[q + j][4] = Sassemble[i][j + 1][4]\n                NJbode[q + j][5] = Sassemble[i][j + 1][5]\n                NJbode[q + j][6] = Sassemble[i][j + 1][6]\n                NJbode[q + j][7] = Sassemble[i][j + 1][7]\n                NJbode[q + j][8] = Sassemble[i][j + 1][8]\n                NJbode[q + j][9] = Sassemble[i][j + 1][9]\n                NJbode[q + j][10] = Sassemble[i][j + 1][10]\n                NJbode[q + j][11] = Sassemble[i][j + 1][11]\n                NJbode[q + j][12] = Sassemble[i][j + 1][12]\n                NJbode[q + j][13] = Sassemble[i][j + 1][13]\n                NJbode[q + j][14] = q + j + 1\n            # print('NJbode loop last = ', NJbode)\n            r += int(np.sum(SNodevalue[i, :, 2]))\n            q += int(np.amax(SNodevalue[i, :, 1])) + 1\n            # print('sum = ' , np.sum(SNodevalue[i,:,2]))\n            # print('q = ', q)\n            # print('r = ', r)\n\n        # print('NJBode = ', NJbode)\n        nodep = None\n        xgp = None\n        ygp = None\n        zgp = None\n        bfbp = None\n        bftp = None\n        tfbp = None\n        tftp = None\n        dp = None\n        twp = None\n        dwp = None\n        hp = None\n        Afilp = None\n        nodes = np.zeros((2, 1))\n        xgs = np.zeros((2, 1))\n        ygs = np.zeros((2, 1))\n        zgs = np.zeros((2, 1))\n        bfbs = np.zeros((2, 1))\n        tfbs = np.zeros((2, 1))\n        bfts = np.zeros((2, 1))\n        tfts = np.zeros((2, 1))\n        dws = np.zeros((2, 1))\n        tws = np.zeros((2, 1))\n        ds = np.zeros((2, 1))\n        hs = np.zeros((2, 1))\n        Afil = np.zeros((2, 1))\n        q = 0\n        for i in range(mem):\n\n            for j in range(int(np.amax(SNodevalue[i, :, 1]))):\n                nodes[0][0] = NJbode[q + j][0]\n                nodes[1][0] = NJbode[q + j + 1][0]\n                xgs[0][0] = NJbode[q + j][2]\n                xgs[1][0] = NJbode[q + j + 1][2]\n                ygs[0][0] = NJbode[q + j][3]\n                ygs[1][0] = NJbode[q + j + 1][3]\n                zgs[0][0] = NJbode[q + j][4]\n                zgs[1][0] = NJbode[q + j + 1][4]\n                bfbs[0][0] = NJbode[q + j][5]\n                bfbs[1][0] = NJbode[q + j + 1][5]\n                tfbs[0][0] = NJbode[q + j][6]\n                tfbs[1][0] = NJbode[q + j + 1][6]\n                bfts[0][0] = NJbode[q + j][7]\n                bfts[1][0] = NJbode[q + j + 1][7]\n                tfts[0][0] = NJbode[q + j][8]\n                tfts[1][0] = NJbode[q + j + 1][8]\n                dws[0][0] = NJbode[q + j][9]\n                dws[1][0] = NJbode[q + j + 1][9]\n                tws[0][0] = NJbode[q + j][10]\n                tws[1][0] = NJbode[q + j + 1][10]\n                ds[0][0] = NJbode[q + j][11]\n                ds[1][0] = NJbode[q + j + 1][11]\n                hs[0][0] = NJbode[q + j][12]\n                hs[1][0] = NJbode[q + j + 1][12]\n                Afil[0][0] = NJbode[q + j][13]\n                Afil[1][0] = NJbode[q + j + 1][13]\n                if np.isclose(j + 1, np.amax(SNodevalue[i, :, 1])):\n                    # print('# if in LB code')\n                    node_1 = int(NJbode[q + j][0])\n                    node_2 = int(NJbode[q + 1 + j][0])\n                    # print('node 1 = ', node_1, '\\nnode 2 = ', node_2)\n                    inter = np.vstack(np.linspace(node_1, node_2, (node_2 - node_1) + 1))\n                    # print('\\ninter = ', inter)\n                    nodesb = np.interp(inter[:, 0], nodes[:, 0], nodes[:, 0])\n                    # print('nodesb = ', nodesb)\n                    xgsb = np.interp(inter[:, 0], nodes[:, 0], xgs[:, 0])\n                    ygsb = np.interp(inter[:, 0], nodes[:, 0], ygs[:, 0])\n                    zgsb = np.interp(inter[:, 0], nodes[:, 0], zgs[:, 0])\n                    bfbsb = np.interp(inter[:, 0], nodes[:, 0], bfbs[:, 0])\n                    tfbsb = np.interp(inter[:, 0], nodes[:, 0], tfbs[:, 0])\n                    bftsb = np.interp(inter[:, 0], nodes[:, 0], bfts[:, 0])\n                    tftsb = np.interp(inter[:, 0], nodes[:, 0], tfts[:, 0])\n                    dwsb = np.interp(inter[:, 0], nodes[:, 0], dws[:, 0])\n                    twsb = np.interp(inter[:, 0], nodes[:, 0], tws[:, 0])\n                    dsb = np.interp(inter[:, 0], nodes[:, 0], ds[:, 0])\n                    hsb = np.interp(inter[:, 0], nodes[:, 0], hs[:, 0])\n                    Afilb = np.interp(inter[:, 0], nodes[:, 0], Afil[:, 0])\n                else:\n                    # print('else in LB code')\n                    # print('q = ', q, '\\nj = ' , j)\n                    node_1 = int(NJbode[q + j][0])\n                    node_2 = int(NJbode[q + 1 + j][0])\n                    # print('node 1 = ', node_1, '\\nnode 2 = ', node_2)\n                    inter = np.vstack(np.linspace(node_1, node_2 - 1, (node_2 - node_1)))\n                    # print('\\ninter = ', inter)\n\n                    nodesb = np.interp(inter[:, 0], nodes[:, 0], nodes[:, 0])\n                    # print('nodesb = ', nodesb)\n                    xgsb = np.interp(inter[:, 0], nodes[:, 0], xgs[:, 0])\n                    # print('xgsb = ', xgsb)\n                    ygsb = np.interp(inter[:, 0], nodes[:, 0], ygs[:, 0])\n                    zgsb = np.interp(inter[:, 0], nodes[:, 0], zgs[:, 0])\n                    bfbsb = np.interp(inter[:, 0], nodes[:, 0], bfbs[:, 0])\n                    tfbsb = np.interp(inter[:, 0], nodes[:, 0], tfbs[:, 0])\n                    bftsb = np.interp(inter[:, 0], nodes[:, 0], bfts[:, 0])\n                    tftsb = np.interp(inter[:, 0], nodes[:, 0], tfts[:, 0])\n                    dwsb = np.interp(inter[:, 0], nodes[:, 0], dws[:, 0])\n                    twsb = np.interp(inter[:, 0], nodes[:, 0], tws[:, 0])\n                    dsb = np.interp(inter[:, 0], nodes[:, 0], ds[:, 0])\n                    hsb = np.interp(inter[:, 0], nodes[:, 0], hs[:, 0])\n                    Afilb = np.interp(inter[:, 0], nodes[:, 0], Afil[:, 0])\n                # print('nodep = ', nodep)\n                if nodep is None:\n                    nodenum = np.vstack(nodesb)\n                    nodep = nodenum\n                    xgnum = np.vstack(xgsb)\n                    xgp = xgnum\n                    ygnum = np.vstack(ygsb)\n                    ygp = ygnum\n                    zgnum = np.vstack(zgsb)\n                    zgp = zgnum\n                    bfbnum = np.vstack(bfbsb)\n                    bfbp = bfbnum\n                    tfbnum = np.vstack(tfbsb)\n                    tfbp = tfbnum\n                    bftnum = np.vstack(bftsb)\n                    bftp = bftnum\n                    tftnum = np.vstack(tftsb)\n                    tftp = tftnum\n                    dwnum = np.vstack(dwsb)\n                    dwp = dwnum\n                    twnum = np.vstack(twsb)\n                    twp = twnum\n                    dnum = np.vstack(dsb)\n                    dp = dnum\n                    hnum = np.vstack(hsb)\n                    hp = hnum\n                    Afilnum = np.vstack(Afilb)\n                    Afilp = Afilnum\n                else:\n                    nodenum = np.vstack((nodep, np.vstack(nodesb)))\n                    nodep = nodenum\n                    xgnum = np.vstack((xgp, np.vstack(xgsb)))\n                    xgp = xgnum\n                    ygnum = np.vstack((ygp, np.vstack(ygsb)))\n                    ygp = ygnum\n                    zgnum = np.vstack((zgp, np.vstack(zgsb)))\n                    zgp = zgnum\n                    bfbnum = np.vstack((bfbp, np.vstack(bfbsb)))\n                    bfbp = bfbnum\n                    tfbnum = np.vstack((tfbp, np.vstack(tfbsb)))\n                    tfbp = tfbnum\n                    bftnum = np.vstack((bftp, np.vstack(bftsb)))\n                    bftp = bftnum\n                    tftnum = np.vstack((tftp, np.vstack(tftsb)))\n                    tftp = tftnum\n                    dwnum = np.vstack((dwp, np.vstack(dwsb)))\n                    dwp = dwnum\n                    twnum = np.vstack((twp, np.vstack(twsb)))\n                    twp = twnum\n                    dnum = np.vstack((dp, np.vstack(dsb)))\n                    dp = dnum\n                    hnum = np.vstack((hp, np.vstack(hsb)))\n                    hp = hnum\n                    Afilnum = np.vstack((Afilp, np.vstack(Afilb)))\n                    Afilp = Afilnum\n\n            # print('amax = ', np.amax(SNodevalue[i,:,1]))\n            q = int(np.amax(SNodevalue[i, :, 1])) + q + 1\n\n        # print('nodenum = ', nodenum)\n        # print('xgnum = ', xgnum)\n        # print('ygnum = ', ygnum)\n        # print('zgnum = ', zgnum)\n        # print('bfbnum = ', bfbnum)\n        # print('tfbnum = ', tfbnum)\n        # print('bftnum = ', bftnum)\n        # print('tftnum = ', tftnum)\n        # print('dwp = ', dwp)\n        # print('twnum = ', twnum)\n        # print('dp = ', dp)\n        # print('hp = ', hp)\n        # print('Afilnum = ', Afilnum)\n\n        nodenum = nodenum.astype(int)\n\n        NC = np.zeros((nodenum.shape[0], 13))\n        NC[:, 0] = nodenum[:, 0]\n        NC[:, 1] = xgnum[:, 0]\n        NC[:, 2] = ygnum[:, 0]\n        NC[:, 3] = zgnum[:, 0]\n        NC[:, 4] = bfbnum[:, 0]\n        NC[:, 5] = tfbnum[:, 0]\n        NC[:, 6] = bftnum[:, 0]\n        NC[:, 7] = tftnum[:, 0]\n        NC[:, 8] = dwnum[:, 0]\n        NC[:, 9] = twnum[:, 0]\n        NC[:, 10] = dnum[:, 0]\n        NC[:, 11] = hnum[:, 0]\n        NC[:, 12] = Afilnum[:, 0]\n\n        q = 0\n        size = 0\n        a = 0\n        # print('SNodevalue = ', SNodevalue)\n        for i in range(mem):\n            # print('sum =',  np.sum(SNodevalue[i,:,2]))\n            size += np.sum(SNodevalue[i, :, 2])\n        # print('size =', size)\n        NCa = np.zeros((int(size) + mem, 16))\n\n        mn = NCa[:, 0].shape[0]\n        for i in range(mem):\n            for j in range(int(np.sum(SNodevalue[i, :, 2])) + 1):\n                if np.isclose(i, 0):\n                    print('\\n## if 1\\n')\n                    for k in range(13):\n                        NCa[j + q][k] = NC[j + q][k]\n\n                else:\n                    # print('\\n## else 1\\n')\n                    if np.isclose(j, 0):\n                        # print('\\n## if 2\\n')\n                        for n in range(mn):\n                            if np.isclose(NCa[n][1], NC[j + q][1]) and np.isclose(NCa[n][2],\n                                                                                  NC[j + q][2]) and np.isclose(\n                                NCa[n][3], NC[j + q][3]) and np.isclose(NCa[n][13], 0):\n                                # print('\\n## if 3\\n')\n                                # print('j = ', j, 'q = ', q)\n                                for k in range(13):\n                                    NCa[j + q][k] = 0\n                                NCa[j + q][13] = n + 1\n                                NCa[j + q][14] = i + 1\n                                NCa[j + q][15] = j + 1\n                                break\n                            else:\n                                # print('\\n## else 3\\n')\n                                for k in range(13):\n                                    NCa[j + q][k] = NC[j + q][k]\n                    elif np.isclose(j, np.sum(SNodevalue[i, :, 2])):\n                        # print('\\n## elif 2\\n')\n                        # print('mn in elif 2 = ', mn)\n                        for n in range(mn):\n                            if np.isclose(NCa[n][1], NC[j + q][1]) and np.isclose(NCa[n][2],\n                                                                                  NC[j + q][2]) and np.isclose(\n                                NCa[n][3], NC[j + q][3]) and np.isclose(NCa[n][13], 0):\n                                # print('\\n## if 4\\n')\n                                NCa[j + q][13] = n + 1\n                                NCa[j + q][14] = i + 1\n                                NCa[j + q][15] = j + 1\n                                break\n                            else:\n                                # print('\\n## else 4\\n')\n                                for k in range(13):\n                                    NCa[j + q][k] = NC[j + q][k]\n                    else:\n                        # print('\\n## else 2\\n')\n                        for k in range(13):\n                            NCa[j + q][k] = NC[j + q][k]\n\n            mn = int(np.sum(SNodevalue[i, :, 2])) + 1\n            q += int(np.sum(SNodevalue[i, :, 2])) + 1\n\n        # print('NCa at the end of the loop = ', NCa)\n\n        # NCb & NCc\n        # Node data without duplication\n        size_2 = 1\n        for i in range(NCa.shape[0]):\n            if not np.isclose(NCa[i][0], 0):\n                size_2 += 1\n\n        # print('size_2 = ', size_2 -1 )\n        r = 0\n        NCb = np.zeros((size_2 - 1, 13))\n        # print('NCb = ' , NCb)\n        for i in range(NCa.shape[0]):\n            if not np.isclose(NCa[i][0], 0):\n                NCb[r][0] = r + 1\n                for k in range(1, 13):\n                    NCb[r][k] = NCa[i][k]\n                r = r + 1\n\n        # print('r = ', r)\n        NCc = NCb\n\n        # print('NCc = ' , NCc)\n\n        # DUP with Duplication\n        DUP = np.zeros((nodenum.shape[0], 14))\n        for i in range(nodenum.shape[0]):\n            for j in range(NCc.shape[0]):\n                if np.isclose(NC[i][1], NCc[j][1]) and np.isclose(NC[i][2], NCc[j][2]) and np.isclose(NC[i][3],\n                                                                                                      NCc[j][3]):\n                    DUP[i][0] = i + 1\n                    for k in range(13):\n                        DUP[i][k + 1] = NCc[j][k]\n\n        # print('DUP = ', DUP)\n\n        # DUP1 & DUP2\n        q = 0\n        r = 0\n        DUP1 = np.zeros((int(size), 14))\n        DUP2 = np.zeros((int(size), 14))\n        for i in range(mem):\n            for j in range(int(np.sum(SNodevalue[i, :, 2]))):\n                # i Node\n                DUP1[j + r][0] = j + r + 1\n                DUP1[j + r][1] = DUP[j + q][1]\n                for k in range(1, 13):\n                    DUP1[j + r][k + 1] = NC[j + q][k]\n\n                # j Node\n                DUP2[j + r][0] = j + r + 1\n                DUP2[j + r][1] = DUP[j + q + 1][1]\n                for k in range(1, 13):\n                    DUP2[j + r][k + 1] = NC[j + q + 1][k]\n            r += int(np.sum(SNodevalue[i, :, 2]))\n            q += int(np.sum(SNodevalue[i, :, 2])) + 1\n        #\n        # print('DUP1 = ', DUP1)\n        # print('DUP2 = ', DUP2)\n        return DUP1, DUP2, mem, xn, JNodeValues_i, JNodeValues_j, SNodevalue, Rval\n\n    def InitialEleLengthRendering(self, xn, mem, xg1, yg1, zg1, xg2, yg2, zg2, SNodevalue):\n        # Initial Each Element Length\n        # Preallocationg\n        # print('xg1 = ', xg1)\n        # print('xg2 = ', xg2)\n        # print('yg1 = ', yg1)\n        # print('yg2 = ', yg2)\n        # print('zg1 = ', zg1)\n        # print('zg2 = ', zg2)\n\n        xn = int(xn)\n        dX0 = np.zeros((xn, 1))\n        dY0 = np.zeros((xn, 1))\n        dZ0 = np.zeros((xn, 1))\n        L0 = np.zeros((xn, 1))\n\n        try:\n            xg1.shape[1] # test for the array size\n        except IndexError:\n            xg1_ = np.zeros((xn,1))\n            xg2_ = np.zeros((xn,1))\n            yg1_ = np.zeros((xn,1))\n            yg2_ = np.zeros((xn,1))\n            zg1_ = np.zeros((xn,1))\n            zg2_ = np.zeros((xn,1))\n\n            xg1_[:,0] = xg1\n            xg2_[:,0] = xg2\n            yg1_[:,0] = yg1\n            yg2_[:,0] = yg2\n            zg1_[:,0] = zg1\n            zg2_[:,0] = zg2\n\n            xg1 = xg1_\n            xg2 = xg2_\n            yg1 = yg1_\n            yg2 = yg2_\n            zg1 = zg1_\n            zg2 = zg2_\n\n\n        for i in range(int(xn)):\n            dX0[i][0] = xg2[i][0] - xg1[i][0]\n            dY0[i][0] = yg2[i][0] - yg1[i][0]\n            dZ0[i][0] = zg2[i][0] - zg1[i][0]\n            L0[i][0] = np.sqrt(np.square(dX0[i][0])) + np.sqrt(np.square(dY0[i][0])) + np.sqrt(np.square(dZ0[i][0]))\n\n        # Initial Member x-dir Nodal Coordinates for Each Member\n        # Preallocationg\n\n        # print('L0 = ',  L0)\n\n        MemLength = np.zeros((xn, 1))\n        segnum = np.zeros((int(mem) + 1, 1))\n\n        for i in range(int(mem)):\n            for k in range(int(np.sum(SNodevalue[i, :, 2]))):\n                if np.isclose(k + segnum[i][0], segnum[i][0]):\n                    # print('test1', int(k+segnum[i][0]))\n                    MemLength[int(k + segnum[i][0])][0] = L0[int(k + segnum[i][0])][0]\n                else:\n                    # print('test2',int(k + segnum[i][0]))\n                    MemLength[int(k + segnum[i][0])][0] = MemLength[int(k + segnum[i][0] - 1)][0] + \\\n                                                          L0[int(k + segnum[i][0])][0]\n\n            segnum[i + 1][0] = int(segnum[i][0] + sum(SNodevalue[i, :, 2]))\n\n        # print('segnum = ', segnum)\n        # print('MemLength = ', MemLength)\n        return MemLength\n\n    def TapedEleLength(self, NTshex1, NTshey1, NTshez1, NTshex2, NTshey2, NTshez2, alpharef):\n        tr1 = np.zeros((3, 1))\n        tr2 = np.zeros((3, 1))\n        Rz = np.zeros((3, 3))\n\n        tr1[0][0] = NTshex1\n        tr1[1][0] = NTshey1\n        tr1[2][0] = NTshez1\n\n        tr2[0][0] = NTshex2\n        tr2[1][0] = NTshey2\n        tr2[2][0] = NTshez2\n\n        Rz[0][0] = np.cos(alpharef)\n        Rz[0][1] = -np.sin(alpharef)\n        Rz[1][0] = np.sin(alpharef)\n        Rz[1][1] = np.cos(alpharef)\n        Rz[2][2] = 1\n\n        tap1 = Rz.dot(tr1)\n        tap2 = Rz.dot(tr2)\n\n        # print(\"taqps\", tap1, tap2)\n\n        return tap1, tap2\n\n    def modelWithBC(self):\n        DUP1, DUP2, mem, xn, JNodeValues_i, JNodeValues_j, SNodevalue, Rval = SABRE2LBCODE.LBCode(self)\n\n        MI = np.zeros((DUP1[:, 0].shape[0], 3))\n        MI[:, 0] = DUP1[:, 0]\n        MI[:, 1] = DUP1[:, 1]\n        MI[:, 2] = DUP2[:, 1]\n        # print('MI = ', MI)\n\n        xg1, xg2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros(\n            (DUP1[:, 0].shape[0], 1))  # element length: xg1(start) xg2(end)\n        yg1, yg2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros(\n            (DUP1[:, 0].shape[0], 1))  # element length: xg1(start) xg2(end)\n        zg1, zg2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros(\n            (DUP1[:, 0].shape[0], 1))  # element length: xg1(start) xg2(end)\n\n        xg1[:, 0] = DUP1[:, 2]\n        yg1[:, 0] = DUP1[:, 3]\n        zg1[:, 0] = DUP1[:, 4]\n\n        xg2[:, 0] = DUP2[:, 2]\n        yg2[:, 0] = DUP2[:, 3]\n        zg2[:, 0] = DUP2[:, 4]\n\n        # Section properties at each element under natural frame\n        bfb1, bfb2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros((DUP1[:, 0].shape[0], 1))  # Bottom flange width\n        tfb1, tfb2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros((DUP1[:, 0].shape[0], 1))  # Bottom flange thickness\n        bft1, bft2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros((DUP1[:, 0].shape[0], 1))  # Top flange width\n        tft1, tft2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros((DUP1[:, 0].shape[0], 1))  # Top flange thickness\n        Dg1, Dg2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros((DUP1[:, 0].shape[0], 1))  # dw:Web depth (y-dir)\n        tw1, tw2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros((DUP1[:, 0].shape[0], 1))  # dw:Web depth (y-dir)\n        hg1, hg2 = np.zeros((DUP1[:, 0].shape[0], 1)), np.zeros(\n            (DUP1[:, 0].shape[0], 1))  # h : Distance between flange centroids\n\n        bfb1[:, 0] = DUP1[:, 5]\n        tfb1[:, 0] = DUP1[:, 6]\n        bft1[:, 0] = DUP1[:, 7]\n        tft1[:, 0] = DUP1[:, 8]\n        Dg1[:, 0] = DUP1[:, 9]\n        tw1[:, 0] = DUP1[:, 10]\n        hg1[:, 0] = DUP1[:, 12]\n\n        bfb2[:, 0] = DUP2[:, 5]\n        tfb2[:, 0] = DUP2[:, 6]\n        bft2[:, 0] = DUP2[:, 7]\n        tft2[:, 0] = DUP2[:, 8]\n        Dg2[:, 0] = DUP2[:, 9]\n        tw2[:, 0] = DUP2[:, 10]\n        hg2[:, 0] = DUP2[:, 12]\n\n        #   Geometric dimension of Cross-section\n        #   Mid-web depth\n\n        Dt1 = Dg1 / 2  # top of Web depth to mid web depth\n        Dt2 = Dg2 / 2  # top of Web depth to mid web depth\n        Db1 = Dt1  # bottom of Web depth to mid web depth\n        Db2 = Dt2  # bottom of Web depth to mid web depth\n        ht1 = Dt1 + tft1 / 2  # top flange centroid to mid web depth\n        ht2 = Dt2 + tft2 / 2  # top flange centroid to mid web depth\n        hb1 = Db1 + tfb1 / 2  # bottom flange centroid to mid web depth\n        hb2 = Db2 + tfb2 / 2  # bottom flange centroid to mid web depth\n\n        # Shear center\n        # Start node\n        # bottom flange centroid to shear center\n\n        hsb1 = np.divide((np.multiply(np.multiply(tft1, np.power(bft1, 3)), hg1)),\n                         (np.multiply(tfb1, np.power(bfb1, 3)) + np.multiply(tft1, np.power(bft1, 3))))\n        Dsb1 = hsb1 - tfb1 / 2  # bottom of Web depth to shear center\n        hst1 = hg1 - hsb1  # top flange centroid to shear center\n        Dst1 = hst1 - tft1 / 2  # top of Web depth to shear center\n\n        # End node\n        # bottom flange centroid to shear center\n        hsb2 = np.divide((np.multiply(np.multiply(tft2, np.power(bft2, 3)), hg2)),\n                         (np.multiply(tfb2, np.power(bfb2, 3)) + np.multiply(tft2, np.power(bft2, 3))))\n        Dsb2 = hsb2 - tfb2 / 2  # bottom of Web depth to shear center\n        hst2 = hg2 - hsb2  # top flange centroid to shear center\n        Dst2 = hst2 - tft2 / 2  # top of Web depth to shear center\n\n        # Centroid Axis ; ytbar = top flange to centroid\n        # Start Node\n        Ag1 = np.multiply(tft1, bft1) + np.multiply(tw1, Dg1) + np.multiply(tfb1, bfb1)\n        # print(np.divide(Dg1,2))\n        # print(np.multiply(Dg1, tft1 + np.divide(Dg1,2)))\n        # print(np.multiply(tw1, np.multiply((Dg1, tft1 + np.divide(Dg1,2)))))\n        ytbar1 = (np.divide(np.multiply(bft1, np.multiply(tft1, tft1)), 2) + np.multiply(tw1, np.multiply(\n            Dg1, tft1 + np.divide(Dg1, 2))) + np.divide(\n            np.multiply(bfb1, np.multiply(tfb1, np.divide((tft1 + Dg1 + tfb1), 2))), Ag1))\n        Dct1 = ytbar1 - tft1\n        Dcb1 = Dg1 - Dct1\n        hct1 = ytbar1 - tft1 / 2\n        hcb1 = hg1 - hct1\n\n        # End Node\n\n        Ag2 = np.multiply(tft2, bft2) + np.multiply(tw2, Dg2) + np.multiply(tfb2, bfb2)\n        ytbar2 = (np.divide(np.multiply(bft2, np.multiply(tft2, tft2)), 2) + np.multiply(tw2, np.multiply(\n            Dg2, (tft2 + np.divide(Dg2, 2)))) + np.divide(\n            np.multiply(bfb2, np.multiply(tfb2, np.divide((tft2 + Dg2 + tfb2), 2))), Ag2))\n        Dct2 = ytbar2 - tft2\n        Dcb2 = Dg2 - Dct2\n        hct2 = ytbar2 - tft2 / 2\n        hcb2 = hg2 - hct2\n\n        CSD1 = hct1 - hst1\n        CSD2 = hct2 - hst2\n\n        # Geometric dimension of Cross-section : P299 E\n\n        # Global frame angle for each element without considering shear center\n\n        alpharef = np.zeros((int(xn), 2))\n        q = 0\n\n        # print('mem = ', mem)\n        for i in range(int(mem)):\n            # print('i = ', i)\n            for j in range(int(np.sum(SNodevalue[i, :, 2]))):\n                opp = JNodeValues_j[i, 3] - JNodeValues_i[i, 3]  # element depth in y-dir\n                adj = JNodeValues_j[i, 2] - JNodeValues_i[i, 2]  # element length in x-dir\n                alpharef[q + j][0] = MI[q + j][0]\n                alpharef[q + j][1] = np.arctan2(opp, adj)  # Only global frame angle\n\n            q += int(np.sum(SNodevalue[i, :, 2]))\n\n        # print('alpharef = ', alpharef)\n\n        MemLength = SABRE2LBCODE.InitialEleLengthRendering(self, xn, mem, xg1, yg1, zg1, xg2, yg2, zg2, SNodevalue)\n        print('MemLength = ', MemLength)\n        q = 0\n        xn = int(xn)\n        val1 = np.zeros((xn, 1))\n        for i in range(int(mem)):\n            for j in range(int(np.sum(SNodevalue[i, :, 2]))):\n                val1[q + j][0] = Rval[i][1]\n\n            q += int(np.sum(SNodevalue[i, :, 2]))\n\n        NTshe1, NTshe2 = np.zeros((xn, 4)), np.zeros((xn, 4))\n        segnum = np.zeros((int(mem) + 1, 1))\n        ys1 = np.zeros((xn, 1))\n        ys2 = np.zeros((xn, 1))\n\n        for i in range(mem):\n            if Rval[i][1] == 1:\n                for k in range(int(np.sum(SNodevalue[i, :, 2]))):\n                    ys1[int(k + segnum[i][0])][0] = (Dg1[int(k + segnum[i][0])][0]) / 2 - Dst1[int(k + segnum[i][0])][0]\n                    ys2[int(k + segnum[i][0])][0] = (Dg2[int(k + segnum[i][0])][0]) / 2 - Dst2[int(k + segnum[i][0])][\n                        0]  # Shear center\n                    if [k + segnum[i][0]][0] == (segnum[i][0]):\n                        NTshe1[[int(k + segnum[i][0])][0]][0] = k + segnum[i][0] + 1\n                        NTshe2[[int(k + segnum[i][0])][0]][0] = k + segnum[i][0] + 1\n                        NTshe1[[int(k + segnum[i][0])][0]][1] = 0\n                        NTshe2[[int(k + segnum[i][0])][0]][1] = MemLength[int(k + segnum[i][0])][0]\n                        NTshe1[[int(k + segnum[i][0])][0]][2] = ys1[int(k + segnum[i][0])][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][2] = ys2[int(k + segnum[i][0])][0]\n                        NTshe1[[int(k + segnum[i][0])][0]][3] = zg1[int(k + segnum[i][0])][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][3] = zg2[int(k + segnum[i][0])][0]\n                    else:\n                        NTshe1[[int(k + segnum[i][0])][0]][0] = k + segnum[i][0] + 1\n                        NTshe2[[int(k + segnum[i][0])][0]][0] = k + segnum[i][0] + 1\n                        NTshe1[[int(k + segnum[i][0])][0]][1] = MemLength[int(k + segnum[i][0] - 1)][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][1] = MemLength[int(k + segnum[i][0])][0]\n                        NTshe1[[int(k + segnum[i][0])][0]][2] = ys1[int(k + segnum[i][0])][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][2] = ys2[int(k + segnum[i][0])][0]\n                        NTshe1[[int(k + segnum[i][0])][0]][3] = zg1[int(k + segnum[i][0])][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][3] = zg2[int(k + segnum[i][0])][0]\n\n            elif Rval[i][1] == 2:\n                for k in range(int(np.sum(SNodevalue[i, :, 2]))):\n                    ys1[int(k + segnum[i][0])][0] = - Dst1[int(k + segnum[i][0])][0]\n                    ys2[int(k + segnum[i][0])][0] = - Dst2[int(k + segnum[i][0])][0]  # Shear center\n                    if [k + segnum[i][0]][0] == (segnum[i][0]):\n                        NTshe1[[int(k + segnum[i][0])][0]][0] = k + segnum[i][0] + 1\n                        NTshe2[[int(k + segnum[i][0])][0]][0] = k + segnum[i][0] + 1\n                        NTshe1[[int(k + segnum[i][0])][0]][1] = 0\n                        NTshe2[[int(k + segnum[i][0])][0]][1] = MemLength[int(k + segnum[i][0])][0]\n                        NTshe1[[int(k + segnum[i][0])][0]][2] = ys1[int(k + segnum[i][0])][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][2] = ys2[int(k + segnum[i][0])][0]\n                        NTshe1[[int(k + segnum[i][0])][0]][3] = zg1[int(k + segnum[i][0])][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][3] = zg2[int(k + segnum[i][0])][0]\n                    else:\n                        NTshe1[[int(k + segnum[i][0])][0]][0] = k + segnum[i][0] + 1\n                        NTshe2[[int(k + segnum[i][0])][0]][0] = k + segnum[i][0] + 1\n                        NTshe1[[int(k + segnum[i][0])][0]][1] = MemLength[(k + segnum[i][0] - 1)][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][1] = MemLength[(k + segnum[i][0])][0]\n                        NTshe1[[int(k + segnum[i][0])][0]][2] = ys1[int(k + segnum[i][0])][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][2] = ys2[int(k + segnum[i][0])][0]\n                        NTshe1[[int(k + segnum[i][0])][0]][3] = zg1[int(k + segnum[i][0])][0]\n                        NTshe2[[int(k + segnum[i][0])][0]][3] = zg2[int(k + segnum[i][0])][0]\n\n            elif Rval[i][1] == 3:\n                for k in range(int(np.sum(SNodevalue[i, :, 2]))):\n                    ys1[k + segnum[i][0]][0] = (Dsb1[k + segnum[i][0]][0])\n                    ys2[k + segnum[i][0]][0] = (Dsb2[k + segnum[i][0]][0])\n                    if [k + segnum[i][0]][0] == (segnum[i][0]):\n                        NTshe1[[k + segnum[i][0]][0]][0] = k + segnum[i][0] + 1\n                        NTshe2[[k + segnum[i][0]][0]][0] = k + segnum[i][0] + 1\n                        NTshe1[[k + segnum[i][0]][0]][1] = 0\n                        NTshe2[[k + segnum[i][0]][0]][1] = MemLength[k + segnum[i][0]][0]\n                        NTshe1[[k + segnum[i][0]][0]][2] = ys1[k + segnum[i][0]][0]\n                        NTshe2[[k + segnum[i][0]][0]][2] = ys2[k + segnum[i][0]][0]\n                        NTshe1[[k + segnum[i][0]][0]][3] = zg1[k + segnum[i][0]][0]\n                        NTshe2[[k + segnum[i][0]][0]][3] = zg2[k + segnum[i][0]][0]\n                    else:\n                        NTshe1[[k + segnum[i][0]][0]][0] = k + segnum[i][0] + 1\n                        NTshe2[[k + segnum[i][0]][0]][0] = k + segnum[i][0] + 1\n                        NTshe1[[k + segnum[i][0]][0]][1] = MemLength[k + segnum[i][0] - 1][0]\n                        NTshe2[[k + segnum[i][0]][0]][1] = MemLength[k + segnum[i][0]][0]\n                        NTshe1[[k + segnum[i][0]][0]][2] = ys1[k + segnum[i][0]][0]\n                        NTshe2[[k + segnum[i][0]][0]][2] = ys2[k + segnum[i][0]][0]\n                        NTshe1[[k + segnum[i][0]][0]][3] = zg1[k + segnum[i][0]][0]\n                        NTshe2[[k + segnum[i][0]][0]][3] = zg2[k + segnum[i][0]][0]\n            segnum[i + 1][0] = int(segnum[i][0] + np.sum(SNodevalue[i, :, 2]))\n\n        # print(\"NTshe1 = \\n\", NTshe1,\"\\nNTshe2 = \\n\", NTshe2)\n\n        taper1 = np.zeros((xn, 3))\n        taper2 = np.zeros((xn, 3))\n\n        for n in range(xn):\n            tap1, tap2 = SABRE2LBCODE.TapedEleLength(self, NTshe1[n][1], NTshe1[n][2], NTshe1[n][3], NTshe2[n][1],\n                                                     NTshe2[n][2],\n                                                     NTshe2[n][3], alpharef[n][1])\n            # print(\"tap1 = \", tap1)\n            # print(\"tap2 = \", tap2)\n\n            taper1[n, :] = tap1[:, 0]  # Which is the same as xg.\n            taper2[n, :] = tap2[:, 0]  # Which is the same as yg.\n\n        # Starting Node for each member\n        segnum[0, 0] = 0  # (Start node number - 1) for each member\n        NG1 = np.zeros((xn, 3))\n        NG2 = np.zeros((xn, 3))\n        for i in range(mem):\n            for k in range(int(np.sum(SNodevalue[i, :, 2]))):\n                NG1[int(k + segnum[i][0])][0] = DUP1[int(segnum[i][0])][2]\n                NG2[int(k + segnum[i][0])][0] = DUP1[int(segnum[i][0])][2]\n                NG1[int(k + segnum[i][0])][1] = DUP1[int(segnum[i][0])][3]\n                NG2[int(k + segnum[i][0])][1] = DUP1[int(segnum[i][0])][3]\n                NG1[int(k + segnum[i][0])][2] = DUP1[int(segnum[i][0])][4]\n                NG2[int(k + segnum[i][0])][2] = DUP1[int(segnum[i][0])][4]\n\n            segnum[i + 1][0] = segnum[i][0] + (int(np.sum(SNodevalue[i, :, 2])))\n\n        # Global frame nodal coordinates w.r.t Shear center\n        # Original Shear Center\n\n        # print('\\ntaper1 = ', taper1, '\\nNG1 = ', NG1)\n        # print('\\ntaper2 = ', taper2, '\\nNG2 = ', NG2)\n\n        Nshe1 = np.zeros((taper1.shape[0], 3))\n        Nshe2 = np.zeros((taper2.shape[0], 3))\n\n        Nshe1[:, 0] = taper1[:, 0] + NG1[:, 0]\n        Nshe2[:, 0] = taper2[:, 0] + NG2[:, 0]\n        Nshe1[:, 1] = taper1[:, 1] + NG1[:, 1]\n        Nshe2[:, 1] = taper2[:, 1] + NG2[:, 1]\n        Nshe1[:, 2] = taper1[:, 2] + NG1[:, 2]\n        Nshe2[:, 2] = taper2[:, 2] + NG2[:, 2]\n\n        # print(\"Nshe1 = \", Nshe1, \"Nshe2 = \", Nshe2)\n\n        # Initial Global frame nodal coordinates w.r.t Shear center\n\n        xg1 = Nshe1[:, 0]\n        yg1 = Nshe1[:, 1]\n        zg1 = Nshe1[:, 2]\n        xg2 = Nshe2[:, 0]\n        yg2 = Nshe2[:, 1]\n        zg2 = Nshe2[:, 2]\n\n        SNshe1 = Nshe1\n        SNshe2 = Nshe2\n\n        # ------------------------------------------------------------------------\n        # -------     Update Intersection Nodes for shear cneter      ------------\n        # ------------------------------------------------------------------------\n\n        r = 0\n        PP = np.zeros((mem, 7))\n        # print('xg1 = ', xg1)\n        # print('xg2 = ', xg2)\n        # print('yg1 = ', yg1)\n        # print('yg2 = ', yg2)\n\n        for i in range(mem):\n            for j in range(int(np.sum(SNodevalue[i, :, 2]))):\n                PP[i][0] = i + 1\n                if j == 0:\n                    PP[i][1] = r + j + 1\n                    PP[i][3] = MI[r + j][1]\n                    PP[i][4] = MI[r + j][2]\n                elif np.isclose((j + 1), np.sum(SNodevalue[i, :, 2])):\n                    PP[i][2] = r + j + 1\n                    PP[i][5] = MI[r + j][1]\n                    PP[i][6] = MI[r + j][2]\n            r += int(np.sum(SNodevalue[i, :, 2]))\n\n        # print('PP = ' , PP)\n        r = 0\n        for i in range(mem):\n            # print('for 1')\n            q = 0\n            if np.isclose(np.sum(SNodevalue[i, :, 2]), 1):\n                print('if 1')\n                for j in range(mem):\n                    # print('for 2')\n                    if np.isclose(np.sum(SNodevalue[j, :, 2]), 1):\n                        print('if 2')\n                        if i != j:\n                            print('if 3')\n                            if np.isclose(PP[i][3], PP[j][3]):\n                                print('if 4')\n                                x1 = xg1[r]\n                                y1 = yg1[r]\n                                x2 = xg2[r]\n                                y2 = yg2[r]\n                                x3 = xg1[q]\n                                y3 = yg1[q]\n                                x4 = xg2[q]\n                                y4 = yg2[q]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 5')\n                                    Px = x3\n                                    Py = y3\n                                else:\n                                    print('else 5')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    print('for 3')\n                                    if np.isclose(x3, xg1[k]) and np.isclose(y3, yg1[k]):\n                                        print('if 6')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x3, xg2[k]) and np.isclose(y3, yg2[k]):\n                                        print('else 6')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][3], PP[j][4]):\n                                print('elif 4')\n                                x1 = xg1[r]\n                                y1 = yg1[r]\n                                x2 = xg2[r]\n                                y2 = yg2[r]\n                                x3 = xg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y3 = yg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                x4 = xg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y4 = yg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 7')\n                                    Px = x4\n                                    Py = y4\n                                else:\n                                    print('else 7')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    print('for 4')\n                                    if np.isclose(x4, xg1[k]) and np.isclose(y4, yg1[k]):\n                                        print('if 8')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x4, xg2[k]) and np.isclose(y4, yg2[k]):\n                                        print('else 8')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][4], PP[j][3]):\n                                print('elif 4_2')\n                                x1 = xg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y1 = yg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x2 = xg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y2 = yg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x3 = xg1[q]\n                                y3 = yg1[q]\n                                x4 = xg2[q]\n                                y4 = yg2[q]\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 9')\n                                    Px = x3\n                                    Py = y3\n                                else:\n                                    print('else 9')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    # print('for 5')\n                                    if np.isclose(x3, xg1[k]) and np.isclose(y3, yg1[k]):\n                                        print('if 10')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x3, xg2[k]) and np.isclose(y3, yg2[k]):\n                                        print('else 10')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n                            elif np.isclose(PP[i][4], PP[j][4]):\n                                print('elif 4_3')\n                                x1 = xg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y1 = yg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x2 = xg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y2 = yg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x3 = xg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y3 = yg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                x4 = xg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y4 = yg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 11')\n                                    Px = x4\n                                    Py = y4\n                                else:\n                                    print('else 11')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    # print('for 5')\n                                    if np.isclose(x4, xg1[k]) and np.isclose(y4, yg1[k]):\n                                        print('if 12')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x4, xg2[k]) and np.isclose(y4, yg2[k]):\n                                        print('else 12')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n                    else:\n                        print('else 2')\n                        if i != j:\n                            print('if 13')\n                            if np.isclose(PP[i][3], PP[j][3]):\n                                print('if 14')\n                                x1 = xg1[r]\n                                y1 = yg1[r]\n                                x2 = xg2[r]\n                                y2 = yg2[r]\n                                x3 = xg1[q]\n                                y3 = yg1[q]\n                                x4 = xg2[q]\n                                y4 = yg2[q]\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 15')\n                                    Px = x3\n                                    Py = y3\n                                else:\n                                    print('else 15')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x3, xg1[k]) and np.isclose(y3, yg1[k]):\n                                        print('if 16')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x3, xg2[k]) and np.isclose(y3, yg2[k]):\n                                        print('else 16')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][3], PP[j][6]):\n                                print('elif 14_1')\n                                x1 = xg1[r]\n                                y1 = yg1[r]\n                                x2 = xg2[r]\n                                y2 = yg2[r]\n                                x3 = xg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y3 = yg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                x4 = xg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y4 = yg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 17')\n                                    Px = x4\n                                    Py = y4\n                                else:\n                                    print('else 17')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x4, xg1[k]) and np.isclose(y4, yg1[k]):\n                                        print('if 18')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x4, xg2[k]) and np.isclose(y4, yg2[k]):\n                                        print('else 18')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][4], PP[j][3]):\n                                print('elif 14_2')\n                                x1 = xg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y1 = yg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x2 = xg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y2 = yg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x3 = xg1[q]\n                                y3 = yg1[q]\n                                x4 = xg2[q]\n                                y4 = yg2[q]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 19')\n                                    Px = x3\n                                    Py = y3\n                                else:\n                                    print('else 19')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x3, xg1[k]) and np.isclose(y3, yg1[k]):\n                                        print('if 20')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x3, xg2[k]) and np.isclose(y3, yg2[k]):\n                                        print('else 20')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][4], PP[j][6]):\n                                print('elif 14_3')\n                                x1 = xg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y1 = yg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x2 = xg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y2 = yg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x3 = xg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y3 = yg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                x4 = xg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y4 = yg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 21')\n                                    Px = x4\n                                    Py = y4\n                                else:\n                                    print('else 21')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x4, xg1[k]) and np.isclose(y4, yg1[k]):\n                                        print('if 22')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x4, xg2[k]) and np.isclose(y4, yg2[k]):\n                                        print('else 22')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n                    q += int(np.sum(SNodevalue[j, :, 2]))\n            else:\n                print('else 1')\n                q = 0\n                for j in range(mem):\n                    if np.isclose(np.sum(SNodevalue[j, :, 2]), 1):\n                        print('if 23')\n                        if i != j:\n                            print('if 24')\n                            if np.isclose(PP[i][3], PP[j][3]):\n                                print('if 25')\n                                x1 = xg1[r]\n                                y1 = yg1[r]\n                                x2 = xg2[r]\n                                y2 = yg2[r]\n                                x3 = xg1[q]\n                                y3 = yg1[q]\n                                x4 = xg2[q]\n                                y4 = yg2[q]\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 26')\n                                    Px = x3\n                                    Py = y3\n                                else:\n                                    print('else 26')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x3, xg1[k]) and np.isclose(y3, yg1[k]):\n                                        print('if 27')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x3, xg2[k]) and np.isclose(y3, yg2[k]):\n                                        print('else 27')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][3], PP[j][4]):\n                                print('elif 25_1')\n                                x1 = xg1[r]\n                                y1 = yg1[r]\n                                x2 = xg2[r]\n                                y2 = yg2[r]\n                                x3 = xg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y3 = yg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                x4 = xg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y4 = yg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 28')\n                                    Px = x4\n                                    Py = y4\n                                else:\n                                    print('else 28')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x4, xg1[k]) and np.isclose(y4, yg1[k]):\n                                        print('if 29')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x4, xg2[k]) and np.isclose(y4, yg2[k]):\n                                        print('else 29')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][6], PP[j][3]):\n                                print('elif 25_2')\n                                x1 = xg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y1 = yg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x2 = xg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y2 = yg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x3 = xg1[q]\n                                y3 = yg1[q]\n                                x4 = xg2[q]\n                                y4 = yg2[q]\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 30')\n                                    Px = x3\n                                    Py = y3\n                                else:\n                                    print('else 30')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x3, xg1[k]) and np.isclose(y3, yg1[k]):\n                                        print('if 31')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x3, xg2[k]) and np.isclose(y3, yg2[k]):\n                                        print('elif 31')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][6], PP[j][4]):\n                                print('elif 25_3')\n                                x1 = xg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y1 = yg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x2 = xg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y2 = yg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x3 = xg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y3 = yg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                x4 = xg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y4 = yg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 32')\n                                    Px = x4\n                                    Py = y4\n                                else:\n                                    print('else 32')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x4, xg1[k]) and np.isclose(y4, yg1[k]):\n                                        print('if 33')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x4, xg2[k]) and np.isclose(y4, yg2[k]):\n                                        print('else 33')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                    else:\n                        print('else 23')\n                        if i != j:\n                            print('if 34')\n                            if np.isclose(PP[i][3], PP[j][3]):\n                                print('if 35')\n                                x1 = xg1[r]\n                                y1 = yg1[r]\n                                x2 = xg2[r]\n                                y2 = yg2[r]\n                                x3 = xg1[q]\n                                y3 = yg1[q]\n                                x4 = xg2[q]\n                                y4 = yg2[q]\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 36')\n                                    Px = x3\n                                    Py = y3\n                                else:\n                                    print('else 36')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x3, xg1[k]) and np.isclose(y3, yg1[k]):\n                                        print('if 37')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x3, xg2[k][0]) and np.isclose(y3, yg2[k]):\n                                        print('else 37')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][3], PP[j][6]):\n                                print('elif 35_1')\n                                x1 = xg1[r]\n                                y1 = yg1[r]\n                                x2 = xg2[r]\n                                y2 = yg2[r]\n                                x3 = xg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y3 = yg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                x4 = xg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y4 = yg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 38')\n                                    Px = x4\n                                    Py = y4\n                                else:\n                                    print('else 38')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x4, xg1[k]) and np.isclose(y4, yg1[k]):\n                                        print('if 39')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x4, xg2[k]) and np.isclose(y4, yg2[k]):\n                                        print('else 39')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                            elif np.isclose(PP[i][6], PP[j][3]):\n                                print('elif 35_2')\n                                # print('index = ', r + np.sum(SNodevalue[i, :, 2]))\n                                # print('xg1 = ', xg1)\n                                # print('xg2 = ', xg2)\n                                # print('yg1 = ', yg1)\n                                # print('yg2 = ', yg2)\n                                x1 = xg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y1 = yg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x2 = xg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y2 = yg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x3 = xg1[q]\n                                y3 = yg1[q]\n                                x4 = xg2[q]\n                                y4 = yg2[q]\n                                # print('x1 = ', x1)\n                                # print('y1 = ', y1)\n                                # print('x1 = ', x2)\n                                # print('y2 = ', y2)\n                                # print('x3 = ', x3)\n                                # print('y3 = ', y3)\n                                # print('x4 = ', x4)\n                                # print('y4 = ', y4)\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n                                # print('Pxy1 = ' , Pxy1)\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 40')\n                                    Px = x3\n                                    Py = y3\n                                else:\n                                    print('else 40')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x3, xg1[k]) and np.isclose(y3, yg1[k]):\n                                        print('if 42')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x3, xg2[k]) and np.isclose(y3, yg2[k]):\n                                        print('else 42')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n\n                            elif np.isclose(PP[i][6], PP[j][6]):\n                                print('elif 35_2')\n                                x1 = xg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y1 = yg1[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x2 = xg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                y2 = yg2[int(r + np.sum(SNodevalue[i, :, 2])) - 1]\n                                x3 = xg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y3 = yg1[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                x4 = xg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                y4 = yg2[int(q + np.sum(SNodevalue[j, :, 2])) - 1]\n                                # print('test=== ' , x1)\n                                # print('test=== ' , y1)\n                                # print('test=== ' , x2)\n                                # print('test=== ' , y2)\n                                # print('test=== ' , x3)\n                                # print('test=== ' , y3)\n                                # print('test=== ' , x4)\n                                # print('test=== ' , y4)\n                                Px1 = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)\n                                Py1 = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)\n                                Pxy1 = ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4))\n\n                                if np.isclose(round(abs((Pxy1))), 0):\n                                    print('if 43')\n                                    Px = x4\n                                    Py = y4\n                                else:\n                                    print('else 43')\n                                    Px = Px1 / Pxy1\n                                    Py = Py1 / Pxy1\n\n                                for k in range(xn):\n                                    if np.isclose(x4, xg1[k]) and np.isclose(y4, yg1[k]):\n                                        print('if 44')\n                                        xg1[k] = Px\n                                        yg1[k] = Py\n                                    elif np.isclose(x4, xg2[k]) and np.isclose(y4, yg2[k]):\n                                        print('else 44')\n                                        xg2[k] = Px\n                                        yg2[k] = Py\n\n                    q += int(np.sum(SNodevalue[j, :, 2]))\n\n            r += int(np.sum(SNodevalue[i, :, 2]))\n\n        xg1 = np.vstack(xg1)\n        xg2 = np.vstack(xg2)\n        yg1 = np.vstack(yg1)\n        yg2 = np.vstack(yg2)\n\n        # print('xg1 = ', xg1)\n        # print('xg2 = ', xg2)\n        # print('yg1 = ', yg1)\n        # print('yg2 = ', yg2)\n\n        # Updated Shear center w.r.t intersections.\n        Nshe1 = np.zeros((xn, 12))\n        Nshe2 = np.zeros((xn, 12))\n\n        Nshe1[:, 0] = xg1[:,0]\n        Nshe2[:, 0] = xg2[:,0]\n        Nshe1[:, 1] = yg1[:,0]\n        Nshe2[:, 1] = yg2[:,0]\n        Nshe1[:, 2] = zg1\n        Nshe2[:, 2] = zg2\n\n        print('Nshe1 = ', Nshe1)\n        print('Nshe2 = ', Nshe2)\n        # print('xn = ', xn)\n\n        for i in range(xn):\n            Nshe1[i][3] = DUP1[i][5]\n            Nshe1[i][4] = DUP1[i][6]\n            Nshe1[i][5] = DUP1[i][7]\n            Nshe1[i][6] = DUP1[i][8]\n            Nshe1[i][7] = DUP1[i][9]\n            Nshe1[i][8] = DUP1[i][10]\n            Nshe1[i][9] = DUP1[i][11]\n            Nshe1[i][10] = DUP1[i][12]\n            Nshe1[i][11] = DUP1[i][13]\n\n            Nshe2[i][3] = DUP2[i][5]\n            Nshe2[i][4] = DUP2[i][6]\n            Nshe2[i][5] = DUP2[i][7]\n            Nshe2[i][6] = DUP2[i][8]\n            Nshe2[i][7] = DUP2[i][9]\n            Nshe2[i][8] = DUP2[i][10]\n            Nshe2[i][9] = DUP2[i][11]\n            Nshe2[i][10] = DUP2[i][12]\n            Nshe2[i][11] = DUP2[i][13]\n\n        # print(SNshe1[:,0])\n        SheMemLegth = SABRE2LBCODE.InitialEleLengthRendering(self, xn, mem, SNshe1[:, 0], SNshe1[:, 1], SNshe1[:, 2],\n                                                             SNshe2[:, 0], SNshe2[:, 1], SNshe2[:, 2], SNodevalue)\n        NsheMemLegth = SABRE2LBCODE.InitialEleLengthRendering(self, xn, mem, Nshe1[:, 0], Nshe1[:, 1], Nshe1[:, 2],\n                                                              Nshe2[:, 0], Nshe2[:, 1], Nshe2[:, 2], SNodevalue)\n\n\n        SheMemLegth = SheMemLegth[:,0]\n        NsheMemLegth = NsheMemLegth[:,0]\n        i_index = 0\n        j_index = 0\n\n        segLoc = np.zeros(2)\n        segLocstep = np.zeros(3)\n\n        for i in range(mem):\n            j_index += int(np.sum(SNodevalue[i,:,2]))\n            if SheMemLegth[i_index - 1]  >= NsheMemLegth[i_index - 1] :\n                segLoc[1] = SheMemLegth[i_index - 1]\n                segLocstep[1] = SheMemLegth[i_index - 1]  - NsheMemLegth[i_index - 1]\n                segLocstep[2] = SheMemLegth[i_index - 1]\n\n                bfbs = (DUP1[i_index - 1][5],  DUP2[i_index - 1][5])\n                tfbs = (DUP1[i_index - 1][6],  DUP2[i_index - 1][6])\n                bfts = (DUP1[i_index - 1][7],  DUP2[i_index - 1][7])\n                tfts = (DUP1[i_index - 1][8],  DUP2[i_index - 1][8])\n                Dgs  = (DUP1[i_index - 1][9],  DUP2[i_index - 1][9])\n                tws  = (DUP1[i_index - 1][10], DUP2[i_index - 1][10])\n                tdgs = (DUP1[i_index - 1][11], DUP2[i_index - 1][11])\n                hgs  = (DUP1[i_index - 1][12], DUP2[i_index - 1][12])\n                Afs  = (DUP1[i_index - 1][13], DUP2[i_index - 1][13])\n\n                bfbsb = np.interp(segLocstep,segLoc,bfbs)\n                tfbsb = np.interp(segLocstep,segLoc,tfbs)\n                bftsb = np.interp(segLocstep,segLoc,bfts)\n                tftsb = np.interp(segLocstep,segLoc,tfts)\n                Dgsb = np.interp(segLocstep,segLoc,Dgs)\n                twsb = np.interp(segLocstep,segLoc,tws)\n                tdgsb = np.interp(segLocstep,segLoc,tdgs)\n                hgsb = np.interp(segLocstep,segLoc,hgs)\n                Afsb = np.interp(segLocstep,segLoc,Afs)\n\n                Nshe1[i_index - 1][3]  =bfbsb[1]\n                Nshe1[i_index - 1][4]  =tfbsb[1]\n                Nshe1[i_index - 1][5]  =bftsb[1]\n                Nshe1[i_index - 1][6]  =tftsb[1]\n                Nshe1[i_index - 1][7]  =Dgsb[1]\n                Nshe1[i_index - 1][8]  =twsb [1]\n                Nshe1[i_index - 1][9]  =tdgsb[1]\n                Nshe1[i_index - 1][10] =hgsb[1]\n                Nshe1[i_index - 1][11] =Afsb[1]\n\n\n            elif SheMemLegth[i_index - 1]  < NsheMemLegth[i_index - 1] :\n                segLoc[1] = SheMemLegth[i_index - 1]\n                segLocstep[0] = SheMemLegth[i_index - 1]  - NsheMemLegth[i_index - 1]\n                segLocstep[2] = SheMemLegth[i_index - 1]\n\n                bfbs = (DUP1[i_index - 1][5], DUP2[i_index - 1][5])\n                tfbs = (DUP1[i_index - 1][6], DUP2[i_index - 1][6])\n                bfts = (DUP1[i_index - 1][7], DUP2[i_index - 1][7])\n                tfts = (DUP1[i_index - 1][8], DUP2[i_index - 1][8])\n                Dgs = (DUP1[i_index - 1][9], DUP2[i_index - 1][9])\n                tws = (DUP1[i_index - 1][10], DUP2[i_index - 1][10])\n                tdgs = (DUP1[i_index - 1][11], DUP2[i_index - 1][11])\n                hgs = (DUP1[i_index - 1][12], DUP2[i_index - 1][12])\n                Afs = (DUP1[i_index - 1][13], DUP2[i_index - 1][13])\n\n                f = interp1d(segLocstep, segLoc, fill_value='extrapolate')\n\n                bfbsb = f(bfbs)\n                tfbsb = f(tfbs)\n                bftsb = f(bfts)\n                tftsb = f(tfts)\n                Dgsb = f(Dgs)\n                twsb = f(tws)\n                tdgsb = f(tdgs)\n                hgsb = f(hgs)\n                Afsb = f(Afs)\n\n                Nshe1[i_index - 1][3] = bfbsb[0]\n                Nshe1[i_index - 1][4] = tfbsb[0]\n                Nshe1[i_index - 1][5] = bftsb[0]\n                Nshe1[i_index - 1][6] = tftsb[0]\n                Nshe1[i_index - 1][7] = Dgsb[0]\n                Nshe1[i_index - 1][8] = twsb[0]\n                Nshe1[i_index - 1][9] = tdgsb[0]\n                Nshe1[i_index - 1][10] = hgsb[0]\n                Nshe1[i_index - 1][11] = Afsb[0]\n\n            if np.isclose(i_index - 1, j_index - 1):\n                if SheMemLegth[i_index - 1]  >= NsheMemLegth[i_index - 1] :\n                    segLoc[1] = SheMemLegth[i_index - 1]\n                    segLocstep[1] = SheMemLegth[i_index - 1]  - NsheMemLegth[i_index - 1]\n                    segLocstep[2] = SheMemLegth[i_index - 1]\n\n                    bfbs = (DUP1[i_index - 1][5], DUP2[i_index - 1][5])\n                    tfbs = (DUP1[i_index - 1][6], DUP2[i_index - 1][6])\n                    bfts = (DUP1[i_index - 1][7], DUP2[i_index - 1][7])\n                    tfts = (DUP1[i_index - 1][8], DUP2[i_index - 1][8])\n                    Dgs = (DUP1[i_index - 1][9], DUP2[i_index - 1][9])\n                    tws = (DUP1[i_index - 1][10], DUP2[i_index - 1][10])\n                    tdgs = (DUP1[i_index - 1][11], DUP2[i_index - 1][11])\n                    hgs = (DUP1[i_index - 1][12], DUP2[i_index - 1][12])\n                    Afs = (DUP1[i_index - 1][13], DUP2[i_index - 1][13])\n\n                    bfbsb = np.interp(segLocstep, segLoc, bfbs)\n                    tfbsb = np.interp(segLocstep, segLoc, tfbs)\n                    bftsb = np.interp(segLocstep, segLoc, bfts)\n                    tftsb = np.interp(segLocstep, segLoc, tfts)\n                    Dgsb = np.interp(segLocstep, segLoc, Dgs)\n                    twsb = np.interp(segLocstep, segLoc, tws)\n                    tdgsb = np.interp(segLocstep, segLoc, tdgs)\n                    hgsb = np.interp(segLocstep, segLoc, hgs)\n                    Afsb = np.interp(segLocstep, segLoc, Afs)\n\n                    Nshe2[j_index - 1][3] = bfbsb[2]\n                    Nshe2[j_index - 1][4] = tfbsb[2]\n                    Nshe2[j_index - 1][5] = bftsb[2]\n                    Nshe2[j_index - 1][6] = tftsb[2]\n                    Nshe2[j_index - 1][7] = Dgsb[2]\n                    Nshe2[j_index - 1][8] = twsb[2]\n                    Nshe2[j_index - 1][9] = tdgsb[2]\n                    Nshe2[j_index - 1][10] = hgsb[2]\n                    Nshe2[j_index - 1][11] = Afsb[2]\n\n                elif SheMemLegth[i_index - 1]  < NsheMemLegth[i_index - 1] :\n                    segLoc[1] = SheMemLegth[i_index - 1]\n                    segLocstep[0] = SheMemLegth[i_index - 1]  - NsheMemLegth[i_index - 1]\n                    segLocstep[2] = SheMemLegth[i_index - 1]\n\n                    bfbs = (DUP1[i_index - 1][5], DUP2[i_index - 1][5])\n                    tfbs = (DUP1[i_index - 1][6], DUP2[i_index - 1][6])\n                    bfts = (DUP1[i_index - 1][7], DUP2[i_index - 1][7])\n                    tfts = (DUP1[i_index - 1][8], DUP2[i_index - 1][8])\n                    Dgs = (DUP1[i_index - 1][9], DUP2[i_index - 1][9])\n                    tws = (DUP1[i_index - 1][10], DUP2[i_index - 1][10])\n                    tdgs = (DUP1[i_index - 1][11], DUP2[i_index - 1][11])\n                    hgs = (DUP1[i_index - 1][12], DUP2[i_index - 1][12])\n                    Afs = (DUP1[i_index - 1][13], DUP2[i_index - 1][13])\n\n                    f = interp1d(segLocstep, segLoc, fill_value='extrapolate')\n\n                    bfbsb = f(bfbs)\n                    tfbsb = f(tfbs)\n                    bftsb = f(bfts)\n                    tftsb = f(tfts)\n                    Dgsb = f(Dgs)\n                    twsb = f(tws)\n                    tdgsb = f(tdgs)\n                    hgsb = f(hgs)\n                    Afsb = f(Afs)\n\n                    Nshe2[j_index - 1][3] = bfbsb[2]\n                    Nshe2[j_index - 1][4] = tfbsb[2]\n                    Nshe2[j_index - 1][5] = bftsb[2]\n                    Nshe2[j_index - 1][6] = tftsb[2]\n                    Nshe2[j_index - 1][7] = Dgsb[2]\n                    Nshe2[j_index - 1][8] = twsb[2]\n                    Nshe2[j_index - 1][9] = tdgsb[2]\n                    Nshe2[j_index - 1][10] = hgsb[2]\n                    Nshe2[j_index - 1][11] = Afsb[2]\n            else:\n                if (SheMemLegth[j_index - 1]  - SheMemLegth[j_index - 1-1] ) >= (SheMemLegth[j_index - 1]  - SheMemLegth[j_index - 1-1] ):\n                    segLoc[1] = SheMemLegth[j_index - 1]  - SheMemLegth[j_index - 1 - 1]\n                    segLocstep[1] = NsheMemLegth[j_index - 1]  - NsheMemLegth[j_index - 1 -1]\n                    segLocstep[2] = SheMemLegth[j_index - 1]  - SheMemLegth[j_index - 1 - 1]\n\n                    bfbs = (DUP1[j_index - 1][5], DUP2[j_index - 1][5])\n                    tfbs = (DUP1[j_index - 1][6], DUP2[j_index - 1][6])\n                    bfts = (DUP1[j_index - 1][7], DUP2[j_index - 1][7])\n                    tfts = (DUP1[j_index - 1][8], DUP2[j_index - 1][8])\n                    Dgs = (DUP1[j_index - 1][9], DUP2[j_index - 1][9])\n                    tws = (DUP1[j_index - 1][10], DUP2[j_index - 1][10])\n                    tdgs = (DUP1[j_index - 1][11], DUP2[j_index - 1][11])\n                    hgs = (DUP1[j_index - 1][12], DUP2[j_index - 1][12])\n                    Afs = (DUP1[j_index - 1][13], DUP2[j_index - 1][13])\n\n                    bfbsb = np.interp(segLocstep, segLoc, bfbs)\n                    tfbsb = np.interp(segLocstep, segLoc, tfbs)\n                    bftsb = np.interp(segLocstep, segLoc, bfts)\n                    tftsb = np.interp(segLocstep, segLoc, tfts)\n                    Dgsb = np.interp(segLocstep, segLoc, Dgs)\n                    twsb = np.interp(segLocstep, segLoc, tws)\n                    tdgsb = np.interp(segLocstep, segLoc, tdgs)\n                    hgsb = np.interp(segLocstep, segLoc, hgs)\n                    Afsb = np.interp(segLocstep, segLoc, Afs)\n\n                    Nshe2[j_index - 1][3] = bfbsb[1]\n                    Nshe2[j_index - 1][4] = tfbsb[1]\n                    Nshe2[j_index - 1][5] = bftsb[1]\n                    Nshe2[j_index - 1][6] = tftsb[1]\n                    Nshe2[j_index - 1][7] = Dgsb[1]\n                    Nshe2[j_index - 1][8] = twsb[1]\n                    Nshe2[j_index - 1][9] = tdgsb[1]\n                    Nshe2[j_index - 1][10] = hgsb[1]\n                    Nshe2[j_index - 1][11] = Afsb[1]\n\n                elif SheMemLegth[j_index - 1]  < NsheMemLegth[j_index - 1] :\n                    segLoc[0] = SheMemLegth[j_index - 1 - 1]\n                    segLoc[1] = SheMemLegth[j_index - 1]\n\n                    segLocstep[0] = SheMemLegth[j_index - 1 - 1]\n                    segLocstep[1] = SheMemLegth[j_index - 1]\n                    segLocstep[2] = NsheMemLegth[j_index - 1]\n                    bfbs = (DUP1[j_index - 1 - 1][5], DUP2[j_index - 1][5])\n                    tfbs = (DUP1[j_index - 1 - 1][6], DUP2[j_index - 1][6])\n                    bfts = (DUP1[j_index - 1 - 1][7], DUP2[j_index - 1][7])\n                    tfts = (DUP1[j_index - 1 - 1][8], DUP2[j_index - 1][8])\n                    Dgs =  (DUP1[j_index - 1 - 1][9], DUP2[j_index - 1][9])\n                    tws =  (DUP1[j_index - 1 - 1][10], DUP2[j_index - 1][10])\n                    tdgs = (DUP1[j_index - 1 - 1][11], DUP2[j_index - 1][11])\n                    hgs =  (DUP1[j_index - 1 - 1][12], DUP2[j_index - 1][12])\n                    Afs =  (DUP1[j_index - 1 - 1][13], DUP2[j_index - 1][13])\n\n                    f = interp1d(segLocstep, segLoc, fill_value='extrapolate')\n\n                    bfbsb = f(bfbs)\n                    tfbsb = f(tfbs)\n                    bftsb = f(bfts)\n                    tftsb = f(tfts)\n                    Dgsb = f(Dgs)\n                    twsb = f(tws)\n                    tdgsb = f(tdgs)\n                    hgsb = f(hgs)\n                    Afsb = f(Afs)\n\n                    Nshe2[j_index - 1][3] = bfbsb[2]\n                    Nshe2[j_index - 1][4] = tfbsb[2]\n                    Nshe2[j_index - 1][5] = bftsb[2]\n                    Nshe2[j_index - 1][6] = tftsb[2]\n                    Nshe2[j_index - 1][7] = Dgsb[2]\n                    Nshe2[j_index - 1][8] = twsb[2]\n                    Nshe2[j_index - 1][9] = tdgsb[2]\n                    Nshe2[j_index - 1][10] = hgsb[2]\n                    Nshe2[j_index - 1][11] = Afsb[2]\n            i_index += int(np.sum(SNodevalue[i,:,2]))\n\n\n        print('Nshe1 = ', Nshe1)\n        print('Nshe2 = ', Nshe2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- V2_dev/SABRE2LBCODE.py	(revision f701d110460cb23969aa9133652d6ffb3a0e6843)
+++ V2_dev/SABRE2LBCODE.py	(date 1522349923266)
@@ -1452,8 +1452,8 @@
         Nshe1[:, 2] = zg1
         Nshe2[:, 2] = zg2
 
-        print('Nshe1 = ', Nshe1)
-        print('Nshe2 = ', Nshe2)
+        # print('Nshe1 = ', Nshe1)
+        # print('Nshe2 = ', Nshe2)
         # print('xn = ', xn)
 
         for i in range(xn):
@@ -1715,9 +1715,9 @@
                     Nshe2[j_index - 1][11] = Afsb[2]
             i_index += int(np.sum(SNodevalue[i,:,2]))
 
-
-        print('Nshe1 = ', Nshe1)
-        print('Nshe2 = ', Nshe2)
+        #
+        # print('Nshe1 = ', Nshe1)
+        # print('Nshe2 = ', Nshe2)
 
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"f0ee3103-6d08-4b17-8e91-429164a7cb7a\" name=\"Default\" comment=\"LBCode xg1 and xg2 works for tapered member, further checks required\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2018_1_06_PM__Default_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2018_1_06_PM__Default_.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2018_1_06_PM__Default_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2018_1_06_PM__Default_1.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_24_2018_10_23_AM__Default_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_24_2018_10_23_AM__Default_.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_26_2018_9_14_AM__Default_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_26_2018_9_14_AM__Default_.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_27_2018_9_47_AM__Default_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_27_2018_9_47_AM__Default_.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_29_2018_10_33_AM__Default_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_29_2018_10_33_AM__Default_.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_29_2018_10_33_AM__Default_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_29_2018_10_33_AM__Default_1.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/SABRE2.V.1.7/SABRE2.V.1.7.1/SABRE2LBCODE.m\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SABRE2.V.1.7/SABRE2.V.1.7.1/SABRE2LBCODE.m\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/V2_dev/process.h5\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/V2_dev/process.h5\" afterDir=\"false\" />\n    </list>\n    <ignored path=\"C:\\Users\\Python\\Desktop\\SABRE2-V2\\.idea\\shelf/\" />\n    <ignored path=\"C:\\Oguzhan\\SABRE2-V2\\.idea\\shelf/\" />\n    <ignored path=\"C:\\Oguzhan\\SABRE2_V2_local\\.idea\\shelf/\" />\n    <ignored path=\"C:\\Users\\Python\\Desktop\\SABRE2_V2_local\\.idea\\shelf/\" />\n    <option name=\"EXCLUDED_CONVERTED_TO_IGNORED\" value=\"true\" />\n    <option name=\"TRACKING_ENABLED\" value=\"true\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CoverageDataManager\">\n    <SUITE FILE_PATH=\"coverage/SABRE2_V2$OpenGLTest.coverage\" NAME=\"OpenGLTest Coverage Results\" MODIFIED=\"1507430818206\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/V2_dev\" />\n    <SUITE FILE_PATH=\"coverage/SABRE2_V2_local$SABRE2_main.coverage\" NAME=\"SABRE2_main Coverage Results\" MODIFIED=\"1522349683698\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/V2_dev\" />\n    <SUITE FILE_PATH=\"coverage/SABRE2_V2$SABRE2_main.coverage\" NAME=\"SABRE2_main Coverage Results\" MODIFIED=\"1521504390628\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/V2_dev\" />\n    <SUITE FILE_PATH=\"coverage/SABRE2_V2$OpenGLcode2.coverage\" NAME=\"OpenGLcode2 Coverage Results\" MODIFIED=\"1507443683441\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/V2_dev\" />\n    <SUITE FILE_PATH=\"coverage/SABRE2_V2$AddNode.coverage\" NAME=\"AddNode Coverage Results\" MODIFIED=\"1520722527280\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/V2_dev\" />\n  </component>\n  <component name=\"DatabaseView\">\n    <option name=\"SHOW_INTERMEDIATE\" value=\"true\" />\n    <option name=\"GROUP_DATA_SOURCES\" value=\"true\" />\n    <option name=\"GROUP_SCHEMA\" value=\"true\" />\n    <option name=\"GROUP_CONTENTS\" value=\"false\" />\n    <option name=\"SORT_POSITIONED\" value=\"false\" />\n    <option name=\"SHOW_TABLE_DETAILS\" value=\"true\" />\n    <option name=\"SHOW_EMPTY_GROUPS\" value=\"false\" />\n    <option name=\"AUTO_SCROLL_FROM_SOURCE\" value=\"false\" />\n    <expand />\n    <select />\n  </component>\n  <component name=\"FileEditorManager\">\n    <leaf>\n      <file leaf-file-name=\"SABRE2LBCODE.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"433\">\n              <caret line=\"1719\" column=\"32\" lean-forward=\"true\" selection-start-line=\"1719\" selection-start-column=\"32\" selection-end-line=\"1719\" selection-end-column=\"32\" />\n            </state>\n          </provider>\n        </entry>\n      </file>\n    </leaf>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"FindInProjectRecents\">\n    <findStrings>\n      <find>Apply_all_member_properties</find>\n      <find>JNode</find>\n      <find>add new</find>\n      <find>add node</find>\n      <find>B_C_tab</find>\n      <find>activate</find>\n      <find>LBC</find>\n      <find>Bounda</find>\n      <find>Render a</find>\n      <find>actionRender_All_Members</find>\n      <find>print('SN</find>\n      <find>nodep</find>\n      <find>interp1d</find>\n      <find>nodes</find>\n      <find>,</find>\n      <find>ntap</find>\n      <find>seglength</find>\n      <find>&quot;seglength</find>\n      <find>else in</find>\n      <find>Rval</find>\n      <find>tape</find>\n      <find>Nshe</find>\n      <find>BNodevalue</find>\n      <find>))]</find>\n      <find>segL</find>\n      <find>i_index</find>\n      <find>j_index</find>\n      <find>Nshe1</find>\n      <find>[0]</find>\n      <find>print</find>\n    </findStrings>\n    <replaceStrings>\n      <replace>glWidget.font2</replace>\n      <replace>glWidget.BNodevalue</replace>\n      <replace>glWidget.member_count</replace>\n      <replace>AddNodeClass.added_node_information</replace>\n      <replace>SABRE2_main_subclass.BNodevalue</replace>\n      <replace>self</replace>\n      <replace>Afillsb[1]</replace>\n      <replace>from.setText(str(np.around</replace>\n      <replace>from.setText(str(np.around(</replace>\n      <replace>is_step_checked</replace>\n      <replace>7 - 2</replace>\n      <replace>- 2</replace>\n      <replace>q + j -1</replace>\n      <replace>q - 3</replace>\n      <replace>,j + 1,</replace>\n      <replace>[q + j - 1]</replace>\n      <replace>[q + j]</replace>\n      <replace>int(max(</replace>\n      <replace>ntap - 1</replace>\n      <replace>np.zeros((2,1))</replace>\n      <replace>[0][0] =</replace>\n      <replace>np.interp</replace>\n      <replace>,np.vstack(</replace>\n      <replace>[int(q + np.sum(SNodevalue[j,:, 2])) - 1]</replace>\n      <replace>[int(r + np.sum(SNodevalue[i,:, 2])) - 1]</replace>\n      <replace>)) - 1]</replace>\n      <replace>j_index</replace>\n      <replace>i_index - 1</replace>\n      <replace>j_index - 1</replace>\n      <replace />\n    </replaceStrings>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"UPDATE_CHANGES_POLICY\" value=\"SHELVE\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"IdeDocumentHistory\">\n    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"C:/Python/Python3.6/Lib/site-packages/vrml/field.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/OpenGLTest.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/OpenGLcode2.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/SABRE2_member_app.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/SABRE2MembModel.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/SABRE2_GUI.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/SABRE2_main.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/SABRE2SegmModel.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/saver_pickle.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/h5_file.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/DropDownActions.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/Assign_Member_Properties.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/SABRE2_main_subclass.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/SABRE2SegmCODE.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/AddNode.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/OpenGLcode.py\" />\n        <option value=\"$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"JsBuildToolGruntFileManager\" detection-done=\"true\" sorting=\"DEFINITION_ORDER\" />\n  <component name=\"JsBuildToolPackageJson\" detection-done=\"true\" sorting=\"DEFINITION_ORDER\" />\n  <component name=\"JsGulpfileManager\">\n    <detection-done>true</detection-done>\n    <sorting>DEFINITION_ORDER</sorting>\n  </component>\n  <component name=\"ProjectFrameBounds\">\n    <option name=\"x\" value=\"480\" />\n    <option name=\"width\" value=\"1447\" />\n    <option name=\"height\" value=\"1087\" />\n  </component>\n  <component name=\"ProjectInspectionProfilesVisibleTreeState\">\n    <entry key=\"Project Default\">\n      <profile-state>\n        <expanded-state>\n          <State>\n            <id />\n          </State>\n          <State>\n            <id>Python</id>\n          </State>\n        </expanded-state>\n        <selected-state>\n          <State>\n            <id>PyCompatibilityInspection</id>\n          </State>\n        </selected-state>\n      </profile-state>\n    </entry>\n  </component>\n  <component name=\"ProjectView\">\n    <navigator proportions=\"\" version=\"1\">\n      <foldersAlwaysOnTop value=\"true\" />\n    </navigator>\n    <panes>\n      <pane id=\"ProjectPane\">\n        <subPane>\n          <expand>\n            <path>\n              <item name=\"SABRE2_V2_local\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"SABRE2_V2_local\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"SABRE2_V2_local\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"SABRE2_V2_local\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"V2_dev\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n          </expand>\n          <select />\n        </subPane>\n      </pane>\n      <pane id=\"Scope\" />\n    </panes>\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.lookFeel\" />\n  </component>\n  <component name=\"RunDashboard\">\n    <option name=\"ruleStates\">\n      <list>\n        <RuleState>\n          <option name=\"name\" value=\"ConfigurationTypeDashboardGroupingRule\" />\n        </RuleState>\n        <RuleState>\n          <option name=\"name\" value=\"StatusDashboardGroupingRule\" />\n        </RuleState>\n      </list>\n    </option>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.SABRE2_main\">\n    <configuration name=\"AddNode\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <module name=\"SABRE2-V2\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/V2_dev\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/V2_dev/AddNode.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n    </configuration>\n    <configuration name=\"OpenGLTest\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <module name=\"SABRE2-V2\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/V2_dev\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/V2_dev/OpenGLTest.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n    </configuration>\n    <configuration name=\"OpenGLcode\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <module name=\"SABRE2-V2\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/V2_dev\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/V2_dev/OpenGLcode.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n    </configuration>\n    <configuration name=\"OpenGLcode2\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <module name=\"SABRE2-V2\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/V2_dev\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/V2_dev/OpenGLcode2.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n    </configuration>\n    <configuration name=\"SABRE2_main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <module name=\"SABRE2-V2\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/V2_dev\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/V2_dev/SABRE2_main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.SABRE2_main\" />\n      <item itemvalue=\"Python.OpenGLcode2\" />\n      <item itemvalue=\"Python.OpenGLTest\" />\n      <item itemvalue=\"Python.OpenGLcode\" />\n      <item itemvalue=\"Python.AddNode\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.SABRE2_main\" />\n        <item itemvalue=\"Python.AddNode\" />\n        <item itemvalue=\"Python.OpenGLcode\" />\n        <item itemvalue=\"Python.OpenGLcode2\" />\n        <item itemvalue=\"Python.OpenGLTest\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SvnConfiguration\">\n    <configuration />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"f0ee3103-6d08-4b17-8e91-429164a7cb7a\" name=\"Default\" comment=\"\" />\n      <created>1506299146941</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1506299146941</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"transfer Massemble updates with Qtablewidget work\">\n      <created>1511730126867</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1511730126867</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Joint Table multiplication check works&#10;Members table tied to the Joint Table\">\n      <created>1511849179312</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1511849179312</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Transfer\">\n      <created>1512413008805</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1512413008805</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Massemble works with all aspects\">\n      <created>1512533726687</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1512533726687</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"SASSEM works\">\n      <created>1512896159591</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1512896159591</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Conversation completed till geometric dimensions of cross-section - SABRE2MEMbModel.\">\n      <created>1512967805867</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1512967805867</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Conversation till 275 . SABRE2MEMbModel.\">\n      <created>1513056251002</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1513056251002</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Conversation till 689 . SABRE2MEMbModel. member elements coordinates works\">\n      <created>1513664356052</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1513664356052</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Member contour works, problem with surface coloring.\">\n      <created>1513756429255</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1513756429255</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"tr\">\n      <created>1515605463918</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1515605463918</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"tr\">\n      <created>1515657325666</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1515657325666</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Massemble in OpenGL works. reference line works. On to next for add nodes.\">\n      <created>1515739587856</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1515739587856</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Member Numbering Fixed, Code Translation continues\">\n      <created>1515779773618</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1515779773618</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"add nodes\">\n      <created>1515996720599</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1515996720599</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"add nodes table employment is set for both AISC and from joint i\">\n      <created>1516085224740</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1516085224740</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"Matlab file changes\">\n      <created>1516215263182</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1516215263182</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"Update on GUI for Add Node Member\">\n      <created>1516381647464</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1516381647464</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"AddNode code till SegCode\">\n      <created>1516517953711</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1516517953711</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"AddNode code till SegCode 140\">\n      <created>1516564414586</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1516564414587</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"AddNode code till SegCode 473\">\n      <created>1516606314284</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1516606314284</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"SegCode is completed bug in if # 1 - 1\">\n      <created>1516865546413</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1516865546413</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"SegCode is completed and Works, SegmModel Halfway through\">\n      <created>1517216520589</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1517216520589</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\"updates on save fun\">\n      <created>1518935100966</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1518935100966</updated>\n    </task>\n    <task id=\"LOCAL-00037\" summary=\"save fun works, update on add node info required\">\n      <created>1519145180606</created>\n      <option name=\"number\" value=\"00037\" />\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1519145180606</updated>\n    </task>\n    <task id=\"LOCAL-00038\" summary=\"h5 file operator python file is added, further tests required\">\n      <created>1519454099676</created>\n      <option name=\"number\" value=\"00038\" />\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1519454099676</updated>\n    </task>\n    <task id=\"LOCAL-00039\" summary=\"update on h5 file for read class\">\n      <created>1519615720258</created>\n      <option name=\"number\" value=\"00039\" />\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1519615720258</updated>\n    </task>\n    <task id=\"LOCAL-00040\" summary=\"update on deleting h5 file with exiting.\">\n      <created>1519624741697</created>\n      <option name=\"number\" value=\"00040\" />\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1519624741697</updated>\n    </task>\n    <task id=\"LOCAL-00041\" summary=\"update on h5 and AddNode file\">\n      <created>1519733965842</created>\n      <option name=\"number\" value=\"00041\" />\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1519733965842</updated>\n    </task>\n    <task id=\"LOCAL-00042\" summary=\"addnode menu combobox handle\">\n      <created>1519753377650</created>\n      <option name=\"number\" value=\"00042\" />\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1519753377650</updated>\n    </task>\n    <task id=\"LOCAL-00043\" summary=\"Massemble for add node changed\">\n      <created>1519943193462</created>\n      <option name=\"number\" value=\"00043\" />\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1519943193463</updated>\n    </task>\n    <task id=\"LOCAL-00044\" summary=\"shape of BNodevalue.shape[0] fixed\">\n      <created>1519954464416</created>\n      <option name=\"number\" value=\"00044\" />\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1519954464416</updated>\n    </task>\n    <task id=\"LOCAL-00045\" summary=\"Add Node menu works, accept remove selected push button!\">\n      <created>1520059085872</created>\n      <option name=\"number\" value=\"00045\" />\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1520059085872</updated>\n    </task>\n    <task id=\"LOCAL-00046\" summary=\"remove node warnings work. inside function bugs need to be fixed\">\n      <created>1520119122537</created>\n      <option name=\"number\" value=\"00046\" />\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1520119122537</updated>\n    </task>\n    <task id=\"LOCAL-00047\" summary=\"Member Props file added\">\n      <created>1520364533506</created>\n      <option name=\"number\" value=\"00047\" />\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1520364533506</updated>\n    </task>\n    <task id=\"LOCAL-00048\" summary=\"Add Node bug in step member fixed # 6 - 1\">\n      <created>1520452171801</created>\n      <option name=\"number\" value=\"00048\" />\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1520452171801</updated>\n    </task>\n    <task id=\"LOCAL-00049\" summary=\"Step added works continue, combobox fixed\">\n      <created>1520534869525</created>\n      <option name=\"number\" value=\"00049\" />\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1520534869525</updated>\n    </task>\n    <task id=\"LOCAL-00050\" summary=\"Add Node OpenGL Rendering Works, work on segment numbering and add node minimized rendering\">\n      <created>1520834890111</created>\n      <option name=\"number\" value=\"00050\" />\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1520834890111</updated>\n    </task>\n    <task id=\"LOCAL-00051\" summary=\"add node minimized rendering works\">\n      <created>1520956961614</created>\n      <option name=\"number\" value=\"00051\" />\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1520956961615</updated>\n    </task>\n    <task id=\"LOCAL-00052\" summary=\"Fix in SegmCode if # 14 - 1\">\n      <created>1520958471612</created>\n      <option name=\"number\" value=\"00052\" />\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1520958471612</updated>\n    </task>\n    <task id=\"LOCAL-00053\" summary=\"Bug in remove nodes fixed\">\n      <created>1521002077088</created>\n      <option name=\"number\" value=\"00053\" />\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1521002077088</updated>\n    </task>\n    <task id=\"LOCAL-00054\" summary=\"work on fill table module\">\n      <created>1521139120011</created>\n      <option name=\"number\" value=\"00054\" />\n      <option name=\"presentableId\" value=\"LOCAL-00054\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1521139120012</updated>\n    </task>\n    <task id=\"LOCAL-00055\" summary=\"Segment Numbering Completed\">\n      <created>1521555965644</created>\n      <option name=\"number\" value=\"00055\" />\n      <option name=\"presentableId\" value=\"LOCAL-00055\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1521555965645</updated>\n    </task>\n    <task id=\"LOCAL-00056\" summary=\"Member Properties Segment Names Working with removing the node as well.\">\n      <created>1521683671916</created>\n      <option name=\"number\" value=\"00056\" />\n      <option name=\"presentableId\" value=\"LOCAL-00056\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1521683671916</updated>\n    </task>\n    <task id=\"LOCAL-00057\" summary=\"Save and Open fun till Member Properties works\">\n      <created>1521833508595</created>\n      <option name=\"number\" value=\"00057\" />\n      <option name=\"presentableId\" value=\"LOCAL-00057\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1521833508595</updated>\n    </task>\n    <task id=\"LOCAL-00058\" summary=\"LB Code till Sassemble works\">\n      <created>1521848283141</created>\n      <option name=\"number\" value=\"00058\" />\n      <option name=\"presentableId\" value=\"LOCAL-00058\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1521848283141</updated>\n    </task>\n    <task id=\"LOCAL-00059\" summary=\"NJbode works\">\n      <created>1521909816249</created>\n      <option name=\"number\" value=\"00059\" />\n      <option name=\"presentableId\" value=\"LOCAL-00059\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1521909816250</updated>\n    </task>\n    <task id=\"LOCAL-00060\" summary=\"DUP1 and DUP2 works\">\n      <created>1522188296582</created>\n      <option name=\"number\" value=\"00060\" />\n      <option name=\"presentableId\" value=\"LOCAL-00060\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1522188296582</updated>\n    </task>\n    <task id=\"LOCAL-00061\" summary=\"NTshe1 and NTshe2 works in LBcode\">\n      <created>1522253830559</created>\n      <option name=\"number\" value=\"00061\" />\n      <option name=\"presentableId\" value=\"LOCAL-00061\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1522253830559</updated>\n    </task>\n    <task id=\"LOCAL-00062\" summary=\"LBCode xg1 and xg2 works for tapered member, further checks required\">\n      <created>1522293324821</created>\n      <option name=\"number\" value=\"00062\" />\n      <option name=\"presentableId\" value=\"LOCAL-00062\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1522293324821</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"63\" />\n    <servers />\n  </component>\n  <component name=\"TodoView\">\n    <todo-panel id=\"selected-file\">\n      <is-autoscroll-to-source value=\"true\" />\n    </todo-panel>\n    <todo-panel id=\"all\">\n      <are-packages-shown value=\"true\" />\n      <is-autoscroll-to-source value=\"true\" />\n    </todo-panel>\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"480\" y=\"0\" width=\"1447\" height=\"1087\" extended-state=\"0\" />\n    <editor active=\"true\" />\n    <layout>\n      <window_info anchor=\"bottom\" id=\"TODO\" order=\"6\" weight=\"0.3286385\" />\n      <window_info anchor=\"bottom\" id=\"Event Log\" order=\"7\" sideWeight=\"0.41753653\" side_tool=\"true\" weight=\"0.23716633\" />\n      <window_info anchor=\"bottom\" id=\"Database Changes\" order=\"8\" show_stripe_button=\"false\" />\n      <window_info anchor=\"bottom\" id=\"Version Control\" order=\"10\" weight=\"0.3271605\" />\n      <window_info anchor=\"bottom\" id=\"Python Console\" order=\"8\" weight=\"0.3287037\" />\n      <window_info active=\"true\" anchor=\"bottom\" id=\"Run\" order=\"2\" sideWeight=\"0.58246344\" visible=\"true\" weight=\"0.37551442\" />\n      <window_info anchor=\"bottom\" id=\"Terminal\" order=\"9\" weight=\"0.3287037\" />\n      <window_info content_ui=\"combo\" id=\"Project\" order=\"0\" weight=\"0.45553294\" />\n      <window_info anchor=\"bottom\" id=\"Docker\" order=\"8\" show_stripe_button=\"false\" />\n      <window_info anchor=\"right\" id=\"Database\" order=\"3\" weight=\"0.32857144\" />\n      <window_info anchor=\"right\" id=\"SciView\" order=\"4\" weight=\"0.5169399\" />\n      <window_info id=\"Structure\" order=\"1\" side_tool=\"true\" weight=\"0.25\" />\n      <window_info id=\"Favorites\" order=\"2\" side_tool=\"true\" />\n      <window_info anchor=\"bottom\" id=\"Debug\" order=\"3\" sideWeight=\"0.49583334\" weight=\"0.37551442\" />\n      <window_info anchor=\"right\" content_ui=\"combo\" id=\"Hierarchy\" order=\"2\" weight=\"0.25\" />\n      <window_info anchor=\"right\" id=\"Coverage\" order=\"5\" side_tool=\"true\" weight=\"0.3296875\" />\n      <window_info anchor=\"bottom\" id=\"Inspection\" order=\"5\" weight=\"0.4\" />\n      <window_info anchor=\"right\" id=\"Commander\" order=\"0\" weight=\"0.4\" />\n      <window_info anchor=\"right\" id=\"Ant Build\" order=\"1\" weight=\"0.25\" />\n      <window_info anchor=\"right\" id=\"Data View\" order=\"6\" />\n      <window_info anchor=\"right\" x=\"0\" y=\"0\" width=\"193\" height=\"887\" id=\"Documentation\" order=\"7\" side_tool=\"true\" weight=\"0.6597077\" />\n      <window_info anchor=\"bottom\" id=\"Message\" order=\"0\" />\n      <window_info anchor=\"bottom\" id=\"Cvs\" order=\"4\" weight=\"0.25\" />\n      <window_info anchor=\"bottom\" id=\"Find\" order=\"1\" weight=\"0.32756868\" />\n      <window_info anchor=\"bottom\" id=\"Concurrent Activities Diagram\" order=\"11\" weight=\"0.32044762\" />\n    </layout>\n    <layout-to-restore>\n      <window_info anchor=\"right\" content_ui=\"combo\" id=\"Hierarchy\" order=\"2\" weight=\"0.25\" />\n      <window_info content_ui=\"combo\" id=\"Project\" order=\"0\" weight=\"0.22772278\" />\n      <window_info anchor=\"bottom\" id=\"Docker\" order=\"9\" show_stripe_button=\"false\" />\n      <window_info anchor=\"bottom\" id=\"Inspection\" order=\"5\" weight=\"0.4\" />\n      <window_info anchor=\"bottom\" id=\"Cvs\" order=\"4\" weight=\"0.25\" />\n      <window_info anchor=\"right\" id=\"Data View\" order=\"6\" />\n      <window_info id=\"Structure\" order=\"1\" weight=\"0.25\" />\n      <window_info anchor=\"right\" id=\"Commander\" order=\"0\" weight=\"0.4\" />\n      <window_info anchor=\"right\" id=\"Ant Build\" order=\"1\" weight=\"0.25\" />\n      <window_info anchor=\"bottom\" id=\"TODO\" order=\"6\" weight=\"0.3286385\" />\n      <window_info anchor=\"bottom\" id=\"Run\" order=\"2\" sideWeight=\"0.71634614\" visible=\"true\" weight=\"0.44753087\" />\n      <window_info anchor=\"bottom\" id=\"Terminal\" order=\"10\" weight=\"0.3287037\" />\n      <window_info anchor=\"bottom\" id=\"Python Console\" order=\"8\" weight=\"0.3287037\" />\n      <window_info anchor=\"bottom\" id=\"Find\" order=\"1\" weight=\"0.32756868\" />\n      <window_info anchor=\"right\" x=\"0\" y=\"0\" width=\"338\" height=\"716\" id=\"Documentation\" order=\"7\" weight=\"0.24206349\" />\n      <window_info anchor=\"right\" id=\"Database\" order=\"3\" weight=\"0.32857144\" />\n      <window_info anchor=\"right\" id=\"Coverage\" order=\"5\" side_tool=\"true\" weight=\"0.3296875\" />\n      <window_info anchor=\"bottom\" id=\"Event Log\" order=\"7\" sideWeight=\"0.50416666\" side_tool=\"true\" weight=\"0.37639877\" />\n      <window_info anchor=\"bottom\" id=\"Concurrent Activities Diagram\" order=\"12\" weight=\"0.32044762\" />\n      <window_info anchor=\"bottom\" id=\"Version Control\" order=\"11\" weight=\"0.3271605\" />\n      <window_info anchor=\"right\" id=\"SciView\" order=\"4\" weight=\"0.5169399\" />\n      <window_info anchor=\"bottom\" id=\"Message\" order=\"0\" />\n      <window_info anchor=\"bottom\" id=\"Debug\" order=\"3\" sideWeight=\"0.49583334\" weight=\"0.37639877\" />\n      <window_info id=\"Favorites\" order=\"2\" side_tool=\"true\" />\n    </layout-to-restore>\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"1\" />\n  </component>\n  <component name=\"VcsContentAnnotationSettings\">\n    <option name=\"myLimit\" value=\"2678400000\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"h5 file operator python file is added, further tests required\" />\n    <MESSAGE value=\"update on h5 file for read class\" />\n    <MESSAGE value=\"update on deleting h5 file with exiting.\" />\n    <MESSAGE value=\"update on h5 and AddNode file\" />\n    <MESSAGE value=\"addnode menu combobox handle\" />\n    <MESSAGE value=\"Massemble for add node changed\" />\n    <MESSAGE value=\"shape of BNodevalue.shape[0] fixed\" />\n    <MESSAGE value=\"Add Node menu works, accept remove selected push button!\" />\n    <MESSAGE value=\"remove node warnings work. inside function bugs need to be fixed\" />\n    <MESSAGE value=\"Member Props file added\" />\n    <MESSAGE value=\"Add Node bug in step member fixed # 6 - 1\" />\n    <MESSAGE value=\"Step added works continue, combobox fixed\" />\n    <MESSAGE value=\"Add Node OpenGL Rendering Works, work on segment numbering and add node minimized rendering\" />\n    <MESSAGE value=\"add node minimized rendering works\" />\n    <MESSAGE value=\"Fix in SegmCode if # 14 - 1\" />\n    <MESSAGE value=\"Bug in remove nodes fixed\" />\n    <MESSAGE value=\"work on fill table module\" />\n    <MESSAGE value=\"Segment Numbering Completed\" />\n    <MESSAGE value=\"Member Properties Segment Names Working with removing the node as well.\" />\n    <MESSAGE value=\"Save and Open fun till Member Properties works\" />\n    <MESSAGE value=\"LB Code till Sassemble works\" />\n    <MESSAGE value=\"NJbode works\" />\n    <MESSAGE value=\"DUP1 and DUP2 works\" />\n    <MESSAGE value=\"NTshe1 and NTshe2 works in LBcode\" />\n    <MESSAGE value=\"LBCode xg1 and xg2 works for tapered member, further checks required\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"LBCode xg1 and xg2 works for tapered member, further checks required\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints-dialog>\n        <breakpoints-dialog />\n      </breakpoints-dialog>\n      <default-breakpoints>\n        <breakpoint type=\"python-exception\">\n          <properties notifyOnTerminate=\"true\" exception=\"BaseException\">\n            <option name=\"notifyOnTerminate\" value=\"true\" />\n          </properties>\n        </breakpoint>\n      </default-breakpoints>\n      <option name=\"time\" value=\"98\" />\n    </breakpoint-manager>\n  </component>\n  <component name=\"editorHistoryManager\">\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/AddNode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"13481\">\n          <caret line=\"793\" column=\"40\" lean-forward=\"true\" selection-start-line=\"793\" selection-start-column=\"40\" selection-end-line=\"793\" selection-end-column=\"40\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/DropDownActions.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"4590\">\n          <caret line=\"270\" column=\"58\" selection-start-line=\"270\" selection-start-column=\"58\" selection-end-line=\"270\" selection-end-column=\"58\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2_main_subclass.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"3620\">\n          <caret line=\"191\" column=\"38\" lean-forward=\"true\" selection-start-line=\"191\" selection-start-column=\"20\" selection-end-line=\"192\" selection-end-column=\"96\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/OpenGLcode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"13820\">\n          <caret line=\"691\" column=\"8\" selection-start-line=\"691\" selection-start-column=\"8\" selection-end-line=\"698\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/Assign_Member_Properties.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"520\">\n          <caret line=\"26\" column=\"79\" selection-start-line=\"26\" selection-start-column=\"79\" selection-end-line=\"26\" selection-end-column=\"79\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/DropDownActions.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"5400\">\n          <caret line=\"270\" column=\"58\" selection-start-line=\"270\" selection-start-column=\"58\" selection-end-line=\"270\" selection-end-column=\"58\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/AddNode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"18020\">\n          <caret line=\"901\" column=\"29\" lean-forward=\"true\" selection-start-line=\"901\" selection-start-column=\"29\" selection-end-line=\"901\" selection-end-column=\"29\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/OpenGLcode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"11747\">\n          <caret line=\"691\" column=\"8\" lean-forward=\"true\" selection-start-line=\"691\" selection-start-column=\"8\" selection-end-line=\"698\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/Assign_Member_Properties.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"374\">\n          <caret line=\"26\" column=\"79\" selection-start-line=\"26\" selection-start-column=\"79\" selection-end-line=\"26\" selection-end-column=\"79\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/AddNode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"13209\">\n          <caret line=\"784\" column=\"16\" selection-start-line=\"784\" selection-start-column=\"16\" selection-end-line=\"785\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/DropDownActions.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"4488\">\n          <caret line=\"270\" column=\"58\" selection-start-line=\"270\" selection-start-column=\"58\" selection-end-line=\"270\" selection-end-column=\"58\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2_main_subclass.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"2140\">\n          <caret line=\"117\" column=\"57\" selection-start-line=\"117\" selection-start-column=\"57\" selection-end-line=\"117\" selection-end-column=\"57\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/OpenGLcode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"7040\">\n          <caret line=\"360\" column=\"112\" selection-start-line=\"360\" selection-start-column=\"112\" selection-end-line=\"360\" selection-end-column=\"112\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/DropDownActions.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"5280\">\n          <caret line=\"270\" column=\"58\" selection-start-line=\"270\" selection-start-column=\"58\" selection-end-line=\"270\" selection-end-column=\"58\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/AddNode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"1580\">\n          <caret line=\"977\" column=\"51\" selection-start-line=\"977\" selection-start-column=\"51\" selection-end-line=\"977\" selection-end-column=\"51\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2_main_subclass.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"2140\">\n          <caret line=\"117\" column=\"57\" selection-start-line=\"117\" selection-start-column=\"57\" selection-end-line=\"117\" selection-end-column=\"57\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/OpenGLcode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"7040\">\n          <caret line=\"360\" column=\"112\" selection-start-line=\"360\" selection-start-column=\"112\" selection-end-line=\"360\" selection-end-column=\"112\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/DropDownActions.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"5280\">\n          <caret line=\"270\" column=\"58\" lean-forward=\"true\" selection-start-line=\"270\" selection-start-column=\"58\" selection-end-line=\"270\" selection-end-column=\"58\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/AddNode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"1580\">\n          <caret line=\"977\" column=\"51\" selection-start-line=\"977\" selection-start-column=\"51\" selection-end-line=\"977\" selection-end-column=\"51\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2_main_subclass.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"51\">\n          <caret line=\"3\" column=\"31\" selection-start-line=\"3\" selection-start-column=\"31\" selection-end-line=\"3\" selection-end-column=\"31\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/OpenGLcode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"1326\">\n          <caret line=\"78\" lean-forward=\"true\" selection-start-line=\"78\" selection-end-line=\"78\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/AddNode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"16456\">\n          <caret line=\"968\" column=\"71\" selection-start-line=\"968\" selection-start-column=\"71\" selection-end-line=\"968\" selection-end-column=\"71\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://C:/Python/Python3.6/Lib/site-packages/numpy/core/fromnumeric.py\" />\n    <entry file=\"file://C:/Python3.6/Lib/site-packages/numpy/lib/npyio.py\" />\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/saver_pickle.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"77\">\n          <caret line=\"30\" column=\"48\" lean-forward=\"true\" selection-start-line=\"30\" selection-start-column=\"48\" selection-end-line=\"30\" selection-end-column=\"48\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://C:/Python/Python3.6/Lib/site-packages/OpenGL/error.py\" />\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/h5_file.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"374\">\n          <caret line=\"23\" selection-start-line=\"23\" selection-end-line=\"23\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2_GUI.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"49780\">\n          <caret line=\"2489\" column=\"37\" selection-start-line=\"2489\" selection-start-column=\"13\" selection-end-line=\"2489\" selection-end-column=\"37\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://C:/Python3.6/Lib/site-packages/numpy/lib/function_base.py\" />\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2MembModel.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"221\">\n          <caret line=\"13\" column=\"19\" lean-forward=\"true\" selection-start-line=\"13\" selection-start-column=\"19\" selection-end-line=\"13\" selection-end-column=\"19\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2SegmCODE.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"16796\">\n          <caret line=\"1097\" column=\"39\" selection-start-line=\"1097\" selection-start-column=\"39\" selection-end-line=\"1097\" selection-end-column=\"39\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/Assign_Member_Properties.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"520\">\n          <caret line=\"26\" column=\"8\" selection-start-line=\"26\" selection-start-column=\"8\" selection-end-line=\"32\" selection-end-column=\"29\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2_main_subclass.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"8460\">\n          <caret line=\"434\" column=\"73\" selection-start-line=\"434\" selection-start-column=\"73\" selection-end-line=\"434\" selection-end-column=\"73\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://C:/Python/Python3.6/Lib/site-packages/numpy/core/numeric.py\" />\n    <entry file=\"file://$USER_HOME$/.PyCharm2017.3/system/python_stubs/652478984/builtins.py\" />\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/OpenGLcode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"302\">\n          <caret line=\"376\" column=\"43\" selection-start-line=\"376\" selection-start-column=\"43\" selection-end-line=\"376\" selection-end-column=\"43\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/DropDownActions.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"20\">\n          <caret line=\"184\" column=\"14\" selection-start-line=\"184\" selection-start-column=\"11\" selection-end-line=\"184\" selection-end-column=\"14\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/AddNode.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"422\">\n          <caret line=\"446\" column=\"35\" selection-start-line=\"443\" selection-start-column=\"12\" selection-end-line=\"449\" selection-end-column=\"59\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://C:/Python/Python3.6/Lib/site-packages/numpy/lib/function_base.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"205\">\n          <caret line=\"2060\" selection-start-line=\"2060\" selection-end-line=\"2060\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"433\">\n          <caret line=\"1719\" column=\"32\" lean-forward=\"true\" selection-start-line=\"1719\" selection-start-column=\"32\" selection-end-line=\"1719\" selection-end-column=\"32\" />\n        </state>\n      </provider>\n    </entry>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision f701d110460cb23969aa9133652d6ffb3a0e6843)
+++ .idea/workspace.xml	(date 1522429394354)
@@ -1,19 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="f0ee3103-6d08-4b17-8e91-429164a7cb7a" name="Default" comment="LBCode xg1 and xg2 works for tapered member, further checks required">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2018_1_06_PM__Default_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2018_1_06_PM__Default_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2018_1_06_PM__Default_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2018_1_06_PM__Default_1.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_24_2018_10_23_AM__Default_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_24_2018_10_23_AM__Default_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_26_2018_9_14_AM__Default_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_26_2018_9_14_AM__Default_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_27_2018_9_47_AM__Default_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_27_2018_9_47_AM__Default_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_29_2018_10_33_AM__Default_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_29_2018_10_33_AM__Default_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_29_2018_10_33_AM__Default_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_29_2018_10_33_AM__Default_1.xml" afterDir="false" />
+    <list default="true" id="f0ee3103-6d08-4b17-8e91-429164a7cb7a" name="Default" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SABRE2.V.1.7/SABRE2.V.1.7.1/SABRE2LBCODE.m" beforeDir="false" afterPath="$PROJECT_DIR$/SABRE2.V.1.7/SABRE2.V.1.7.1/SABRE2LBCODE.m" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/SABRE2.V.1.7/SABRE2.V.1.7.1/SABRE2LBCODE.asv" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py" beforeDir="false" afterPath="$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/V2_dev/process.h5" beforeDir="false" afterPath="$PROJECT_DIR$/V2_dev/process.h5" afterDir="false" />
     </list>
     <ignored path="C:\Users\Python\Desktop\SABRE2-V2\.idea\shelf/" />
     <ignored path="C:\Oguzhan\SABRE2-V2\.idea\shelf/" />
@@ -46,12 +37,12 @@
     <select />
   </component>
   <component name="FileEditorManager">
-    <leaf>
+    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
       <file leaf-file-name="SABRE2LBCODE.py" pinned="false" current-in-tab="true">
         <entry file="file://$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="433">
-              <caret line="1719" column="32" lean-forward="true" selection-start-line="1719" selection-start-column="32" selection-end-line="1719" selection-end-column="32" />
+            <state relative-caret-position="124">
+              <caret line="1681" column="37" selection-start-line="1681" selection-start-column="37" selection-end-line="1681" selection-end-column="37" />
             </state>
           </provider>
         </entry>
@@ -352,13 +343,6 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1506299146941</updated>
-    </task>
-    <task id="LOCAL-00014" summary="transfer Massemble updates with Qtablewidget work">
-      <created>1511730126867</created>
-      <option name="number" value="00014" />
-      <option name="presentableId" value="LOCAL-00014" />
-      <option name="project" value="LOCAL" />
-      <updated>1511730126867</updated>
     </task>
     <task id="LOCAL-00015" summary="Joint Table multiplication check works&#10;Members table tied to the Joint Table">
       <created>1511849179312</created>
@@ -696,7 +680,14 @@
       <option name="project" value="LOCAL" />
       <updated>1522293324821</updated>
     </task>
-    <option name="localTasksCounter" value="63" />
+    <task id="LOCAL-00063" summary="Nshe1 and Nshe2 works">
+      <created>1522349894674</created>
+      <option name="number" value="00063" />
+      <option name="presentableId" value="LOCAL-00063" />
+      <option name="project" value="LOCAL" />
+      <updated>1522349894674</updated>
+    </task>
+    <option name="localTasksCounter" value="64" />
     <servers />
   </component>
   <component name="TodoView">
@@ -710,14 +701,13 @@
   </component>
   <component name="ToolWindowManager">
     <frame x="480" y="0" width="1447" height="1087" extended-state="0" />
-    <editor active="true" />
     <layout>
       <window_info anchor="bottom" id="TODO" order="6" weight="0.3286385" />
       <window_info anchor="bottom" id="Event Log" order="7" sideWeight="0.41753653" side_tool="true" weight="0.23716633" />
       <window_info anchor="bottom" id="Database Changes" order="8" show_stripe_button="false" />
       <window_info anchor="bottom" id="Version Control" order="10" weight="0.3271605" />
       <window_info anchor="bottom" id="Python Console" order="8" weight="0.3287037" />
-      <window_info active="true" anchor="bottom" id="Run" order="2" sideWeight="0.58246344" visible="true" weight="0.37551442" />
+      <window_info anchor="bottom" id="Run" order="2" sideWeight="0.58246344" weight="0.37551442" />
       <window_info anchor="bottom" id="Terminal" order="9" weight="0.3287037" />
       <window_info content_ui="combo" id="Project" order="0" weight="0.45553294" />
       <window_info anchor="bottom" id="Docker" order="8" show_stripe_button="false" />
@@ -726,8 +716,8 @@
       <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
       <window_info id="Favorites" order="2" side_tool="true" />
       <window_info anchor="bottom" id="Debug" order="3" sideWeight="0.49583334" weight="0.37551442" />
+      <window_info anchor="bottom" id="Concurrent Activities Diagram" order="11" weight="0.32044762" />
       <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
-      <window_info anchor="right" id="Coverage" order="5" side_tool="true" weight="0.3296875" />
       <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
       <window_info anchor="right" id="Commander" order="0" weight="0.4" />
       <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
@@ -736,33 +726,33 @@
       <window_info anchor="bottom" id="Message" order="0" />
       <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
       <window_info anchor="bottom" id="Find" order="1" weight="0.32756868" />
-      <window_info anchor="bottom" id="Concurrent Activities Diagram" order="11" weight="0.32044762" />
+      <window_info anchor="right" id="Coverage" order="5" side_tool="true" weight="0.3296875" />
     </layout>
     <layout-to-restore>
+      <window_info anchor="right" x="0" y="0" width="338" height="716" id="Documentation" order="7" weight="0.24206349" />
       <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
-      <window_info content_ui="combo" id="Project" order="0" weight="0.22772278" />
       <window_info anchor="bottom" id="Docker" order="9" show_stripe_button="false" />
       <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
-      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
+      <window_info id="Favorites" order="2" side_tool="true" />
       <window_info anchor="right" id="Data View" order="6" />
       <window_info id="Structure" order="1" weight="0.25" />
       <window_info anchor="right" id="Commander" order="0" weight="0.4" />
       <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
       <window_info anchor="bottom" id="TODO" order="6" weight="0.3286385" />
+      <window_info anchor="bottom" id="Version Control" order="11" weight="0.3271605" />
       <window_info anchor="bottom" id="Run" order="2" sideWeight="0.71634614" visible="true" weight="0.44753087" />
-      <window_info anchor="bottom" id="Terminal" order="10" weight="0.3287037" />
-      <window_info anchor="bottom" id="Python Console" order="8" weight="0.3287037" />
       <window_info anchor="bottom" id="Find" order="1" weight="0.32756868" />
-      <window_info anchor="right" x="0" y="0" width="338" height="716" id="Documentation" order="7" weight="0.24206349" />
+      <window_info content_ui="combo" id="Project" order="0" weight="0.22772278" />
       <window_info anchor="right" id="Database" order="3" weight="0.32857144" />
-      <window_info anchor="right" id="Coverage" order="5" side_tool="true" weight="0.3296875" />
+      <window_info anchor="bottom" id="Terminal" order="10" weight="0.3287037" />
       <window_info anchor="bottom" id="Event Log" order="7" sideWeight="0.50416666" side_tool="true" weight="0.37639877" />
       <window_info anchor="bottom" id="Concurrent Activities Diagram" order="12" weight="0.32044762" />
-      <window_info anchor="bottom" id="Version Control" order="11" weight="0.3271605" />
+      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
       <window_info anchor="right" id="SciView" order="4" weight="0.5169399" />
       <window_info anchor="bottom" id="Message" order="0" />
       <window_info anchor="bottom" id="Debug" order="3" sideWeight="0.49583334" weight="0.37639877" />
-      <window_info id="Favorites" order="2" side_tool="true" />
+      <window_info anchor="right" id="Coverage" order="5" side_tool="true" weight="0.3296875" />
+      <window_info anchor="bottom" id="Python Console" order="8" weight="0.3287037" />
     </layout-to-restore>
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -772,7 +762,6 @@
     <option name="myLimit" value="2678400000" />
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="h5 file operator python file is added, further tests required" />
     <MESSAGE value="update on h5 file for read class" />
     <MESSAGE value="update on deleting h5 file with exiting." />
     <MESSAGE value="update on h5 and AddNode file" />
@@ -797,7 +786,8 @@
     <MESSAGE value="DUP1 and DUP2 works" />
     <MESSAGE value="NTshe1 and NTshe2 works in LBcode" />
     <MESSAGE value="LBCode xg1 and xg2 works for tapered member, further checks required" />
-    <option name="LAST_COMMIT_MESSAGE" value="LBCode xg1 and xg2 works for tapered member, further checks required" />
+    <MESSAGE value="Nshe1 and Nshe2 works" />
+    <option name="LAST_COMMIT_MESSAGE" value="Nshe1 and Nshe2 works" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -815,6 +805,13 @@
     </breakpoint-manager>
   </component>
   <component name="editorHistoryManager">
+    <entry file="file://$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="34380">
+          <caret line="1719" column="15" selection-start-line="1719" selection-start-column="10" selection-end-line="1719" selection-end-column="15" />
+        </state>
+      </provider>
+    </entry>
     <entry file="file://$PROJECT_DIR$/V2_dev/AddNode.py">
       <provider selected="true" editor-type-id="text-editor">
         <state relative-caret-position="13481">
@@ -1054,8 +1051,8 @@
     </entry>
     <entry file="file://$PROJECT_DIR$/V2_dev/SABRE2LBCODE.py">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="433">
-          <caret line="1719" column="32" lean-forward="true" selection-start-line="1719" selection-start-column="32" selection-end-line="1719" selection-end-column="32" />
+        <state relative-caret-position="124">
+          <caret line="1681" column="37" selection-start-line="1681" selection-start-column="37" selection-end-line="1681" selection-end-column="37" />
         </state>
       </provider>
     </entry>
